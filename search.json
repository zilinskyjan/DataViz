[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visualization with R and ggplot",
    "section": "",
    "text": "Overview of this class\nCreating effective visualizations of social and political data can help you discover and communicate new insights. This website contains much of the material I use in my course designed to help students become better communicators with R. Most of what students would need to do can be accomplished with ggplot2.\nIf I had to compress the content of this course into just two lessons, I would say this:"
  },
  {
    "objectID": "index.html#lesson-1-think-of-output-from-statistical-models-as-data.-summarize-it-visually.",
    "href": "index.html#lesson-1-think-of-output-from-statistical-models-as-data.-summarize-it-visually.",
    "title": "Data Visualization with R and ggplot",
    "section": "Lesson 1: Think of output from statistical models as data. Summarize it visually.",
    "text": "Lesson 1: Think of output from statistical models as data. Summarize it visually.\nThere is a lot we can do after extracting relevant information from statistical models. Start asking yourself questions similar to these:\n\nWhat is the distribution of predictions when you change your machine learning algorithm?\nHow stable are coefficients from linear models across specifications?\nWhat do we lose/gain when we display aggregates (e.g. average marginal effects) rather than individual data-points?"
  },
  {
    "objectID": "index.html#lesson-2-the-first-chart-you-produce-is-your-draft-1.-iterate-and-create-reasonably-clear-and-self-contained-visual-exhibits.",
    "href": "index.html#lesson-2-the-first-chart-you-produce-is-your-draft-1.-iterate-and-create-reasonably-clear-and-self-contained-visual-exhibits.",
    "title": "Data Visualization with R and ggplot",
    "section": "Lesson 2: The first chart you produce is your “draft #1”. Iterate and create reasonably clear and self-contained visual exhibits.",
    "text": "Lesson 2: The first chart you produce is your “draft #1”. Iterate and create reasonably clear and self-contained visual exhibits.\n\nStudents are encouraged to think creatively about visualizing different types of information and data. Significant coding experience with R is expected, but prior knowledge of issues related to design, style, and principles of data visualization is not required.\nAfter taking this course, students will be expected to be able to present real data clearly and to identify strengths and weakness of existing data displays and dashboards.\nWe will be graphing various types of evidence including:\n- macro-economic data\n- public opinion data\n- summaries of statistical models\n- quantitative representations of text (e.g. content of social media post and the accompanying metadata)"
  },
  {
    "objectID": "index.html#course-outline",
    "href": "index.html#course-outline",
    "title": "Data Visualization with R and ggplot",
    "section": "Course outline",
    "text": "Course outline\n\nIntroductory topics\n\nWhat works and what to avoid even if it works?\nPrinciples of visual perception and effect communication\nGetting familiar with ggplot\n\n\n\nA ggplot deep dive\n- Toplines, cross-tabs\n- Geometries, statistics and coordinates\n- Facets, themes\n- Refining plots\n- 3-way cross-tabs\n- Heatmaps\n\n\nVisualizing output from statistical models\n- Coefficients and uncertainty\n- Predicted probabilities, marginal effects, and interactions\n- Model performance (in-sample and out-of-sample comparisons) \n- Machine learning output (regression trees, most important variables, etc.)"
  },
  {
    "objectID": "index.html#assignments",
    "href": "index.html#assignments",
    "title": "Data Visualization with R and ggplot",
    "section": "Assignments",
    "text": "Assignments\n\nCreate your own dataset (30%).\n\nCreate your own dataset. It needs to have at least one of these 3 attributes\n\nMultiple levels (at least 2).\nOriginal topic, subject or angle.\nImpressive scope\n\n\nFinal project (70%)\n\nForm a group of 2-3 students\nPrepare a compelling data visualization\nSome elements in R are expected, you could also use D3 or another language if you wish."
  },
  {
    "objectID": "1_principles.html",
    "href": "1_principles.html",
    "title": "1  Principles",
    "section": "",
    "text": "2 There are always tradeoffs\nA frequent tradeoff can be thought of as truthfulness vs. simplicity.\nIn other words, you will need to balance:\nIf you drop outliers, for example, your chart’s readability will almost surely improve. But it could be less truthful.\nIf you label a subset of your observations, then arguably some information “is lost”, unless you post your data.\nYou may agree that you should almost ever make graphs that look like this:\nWhen you can make charts like this instead:"
  },
  {
    "objectID": "1_principles.html#example-making-scatterplots-better",
    "href": "1_principles.html#example-making-scatterplots-better",
    "title": "1  Principles",
    "section": "2.1 Example: Making scatterplots better",
    "text": "2.1 Example: Making scatterplots better\nStarting in 2021, inflation increased in many countries and became a source of serious concern for citizens and politicians. One set of substantive questions dealt with this: should governments be blamed for excessive spending (and borrowing)? Were fiscal decisions responsible for inflation? Here, we’ll deal with potential approach to design visual exhibits that might faciliate some international comparisons.[^1]\n[^1: But also remember that these type of evidence can inform factual debates but they wouldn’t settle the debate.]\nLet’s get some data:\n\nlibrary(tidyverse)\n# Get fiscal data\nimf &lt;- read_csv(\"data_macro/imf-fiscalmonitor-apr2023.csv\")\n\nThe following variables are available, all expressed as percentage of GDP:\n\nunique(imf$variable)\n\n[1] \"General Government Expenditure\" \"Overall Balance\"               \n[3] \"Gross public debt\"             \n\n\nLet’s view the first 3 rows to get a sense of the structure:\n\nhead(imf,3)\n\n# A tibble: 3 × 12\n  variable       country `2014` `2015` `2016` `2017` `2018` `2019` `2020` `2021`\n  &lt;chr&gt;          &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 General Gover… Austra…   36.9   37.4   37.4   36.9   37.0   39.1   44.6   42.2\n2 General Gover… Austria   52.3   51.0   50.1   49.3   48.8   48.6   56.7   56.0\n3 General Gover… Belgium   55.6   53.7   53.1   52.0   52.3   51.9   58.9   55.5\n# ℹ 2 more variables: `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;\n\n\nIf we wanted each row to correspond to one country-year observation, we would run this snippet:\n\nimf %&gt;% pivot_longer(cols=`2014`:`2023`)\n\n# A tibble: 1,080 × 4\n   variable                       country   name  value\n   &lt;chr&gt;                          &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;\n 1 General Government Expenditure Australia 2014   36.9\n 2 General Government Expenditure Australia 2015   37.4\n 3 General Government Expenditure Australia 2016   37.4\n 4 General Government Expenditure Australia 2017   36.9\n 5 General Government Expenditure Australia 2018   37.0\n 6 General Government Expenditure Australia 2019   39.1\n 7 General Government Expenditure Australia 2020   44.6\n 8 General Government Expenditure Australia 2021   42.2\n 9 General Government Expenditure Australia 2022   38.4\n10 General Government Expenditure Australia 2023   39.0\n# ℹ 1,070 more rows\n\n\nBut we’ll focus here on year 2022, so let’s simply create 3 conformative columns:\n\n# Reformat data to wide and keep only the latest year\nimf_wide2022 &lt;- imf %&gt;% select(variable,country,`2022`) %&gt;%\n  pivot_wider(names_from = variable, values_from = `2022`)\n\n\nimf_wide2022\n\n# A tibble: 36 × 4\n   country   General Government Expendit…¹ `Overall Balance` `Gross public debt`\n   &lt;chr&gt;                             &lt;dbl&gt;             &lt;dbl&gt;               &lt;dbl&gt;\n 1 Australia                          38.4            -3.30                 55.7\n 2 Austria                            52.4            -3.31                 77.8\n 3 Belgium                            53.7            -4.32                105. \n 4 Canada                             41.5            -0.700               107. \n 5 Croatia                            45.7            -0.943                67.5\n 6 Cyprus                             39.9             2.26                 86.5\n 7 Czechia                            44.8            -3.59                 42.3\n 8 Denmark                            49.2             2.48                 29.7\n 9 Estonia                            40.2            -1.15                 17.2\n10 Finland                            54.0            -1.86                 74.8\n# ℹ 26 more rows\n# ℹ abbreviated name: ¹​`General Government Expenditure`\n\n\nFinally, we want to add inflation data to our fiscal data:\n\n# Merge in inflation data:\ninf &lt;- read_csv(\"data_macro/inflation_WDI.csv\")\ninf2022 &lt;- inf %&gt;% filter(year==2022)\n\necon2022 &lt;- left_join(imf_wide2022,inf2022,by=\"country\")\n\nSo we will work for a moment with the econ2022 data object.\nThis chart plots the relationship between between public budget deficits and inflation.\n\n# Make a simple plot:\necon2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`,\n         label=country)) + \n  geom_point() +\n  geom_text() +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Public deficit (% of GDP)\", y= \"Inflation (%)\")\n\n\n\n\nA few things to notice:\n\nWe are not displaying Norway (can you check why?)\nWe added an informative title to the scatterplot\nWe made the questionable choice to use geom_text() which uses what we placed inside aes(... label=country).\n\nThe same data can be displayed this way; ggrepel::geom_text_repel() is helpful in this context:\n\necon2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`,\n         label=country)) + \n  geom_point() +\n  ggrepel::geom_text_repel() +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Public deficit (% of GDP)\", y= \"Inflation (%)\")\n\n\n\n\nOr you can highlight a subset of subset of observations relevant for your analysis.\nLet’s create a vector of country names:\n\nsubset &lt;- c(\"Italy\",\"Sweden\",\"United States\")\n\nWe’ll want to insert data=econ2022 %&gt;% filter(country %in% subset) into geom_text_repel:\n\nscatter1 &lt;- econ2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`)) + \n  geom_point() +\n  ggrepel::geom_text_repel(data=econ2022 %&gt;% \n                             filter(country %in% subset),\n           aes(label=country),nudge_x=.75,nudge_y=.75) +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Public deficit (% of GDP)\", y= \"Inflation (%)\") +\n  theme_classic()\n\nscatter1\n\n\n\n\nAdding a layer and selecting attributes for a a specific subset of points - is a general, more widely applicable approach:\n\nscatter1 +\n  geom_point(data=econ2022 %&gt;% filter(country %in% subset),\n             color=\"red\")\n\n\n\n\nWe see that deficit spending is not informative: moderately high inflation was common across OECD countries; neither large deficits, nor budget surpluses, were prognostic of better/worse outcomes.\nWhat about total government spending? We can check:\n\necon2022 %&gt;%\n  ggplot(aes(y=inflation,\n         x=`General Government Expenditure`)) + \n  geom_point() +\n  ggrepel::geom_text_repel(data=econ2022 %&gt;% \n                             filter(country %in% c(\"Italy\",\n                                                   \"Sweden\",\n                                                   \"United States\")),\n           aes(label=country),nudge_y=.5,nudge_x=-.5) +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Public spending (% of GDP)\", y= \"Inflation (%)\") \n\n\n\n\nThis would seem to suggest that higher (government) spending is not necessarily associate with faster price growth.\nTo be sure, a more careful analysis here would require looking it changes in government expenditures.\n\n2.1.1 Exercise: Inflation and government spending\nUse the provided datasets to explore whether an increase in government spending predicts (current or future) inflation.\nConsider the following issues are provide brief justifications:\n\nLet the outcome year of interest be T = 2022. Is it sensible to compare T with T-1? What if the fiscal effect materializes with a lag? And would it be appropriate to compare current spending to pre-pandemic spending?\nShould past spending be subtracted from “current” (T) spending? If your answer is yes, remember that you would be reporting differences expressed in percentage points. (Don’t slip, using the symbol “%” would be misleading…)"
  },
  {
    "objectID": "2_toplines-and-cross-tabs.html#ocasio-cortez-toplines",
    "href": "2_toplines-and-cross-tabs.html#ocasio-cortez-toplines",
    "title": "2  Toplines and crosstabs",
    "section": "2.1 Ocasio-Cortez toplines",
    "text": "2.1 Ocasio-Cortez toplines\nFirst, what percentage of respondents extressed favorable views of AOC?\nYou can look at the distribution of responses directly:\n\na %&gt;% count(cand_favorability_cortez) \n\n# A tibble: 5 × 2\n  cand_favorability_cortez      n\n  &lt;dbl+lbl&gt;                 &lt;int&gt;\n1  1 [Very favorable]        7569\n2  2 [Somewhat favorable]    9424\n3  3 [Somewhat unfavorable]  5988\n4  4 [Very unfavorable]     13908\n5 NA                        25519\n\n\nAnd you can report what proportion of respondents falls into each of the 4 relevant cells:\n\na %&gt;% count(cand_favorability_cortez) %&gt;%\n  mutate(prop = n / sum(n))\n\n# A tibble: 5 × 3\n  cand_favorability_cortez      n   prop\n  &lt;dbl+lbl&gt;                 &lt;int&gt;  &lt;dbl&gt;\n1  1 [Very favorable]        7569 0.121 \n2  2 [Somewhat favorable]    9424 0.151 \n3  3 [Somewhat unfavorable]  5988 0.0959\n4  4 [Very unfavorable]     13908 0.223 \n5 NA                        25519 0.409 \n\n\nNaturally, we’ll want to filter out missing observations (respondnets who were not asked the favorability quesiton):\n\na %&gt;% count(cand_favorability_cortez) %&gt;%\n  filter(!is.na(cand_favorability_cortez)) %&gt;%\n  mutate(prop = n / sum(n),\n         percent = prop*100)\n\n# A tibble: 4 × 4\n  cand_favorability_cortez     n  prop percent\n  &lt;dbl+lbl&gt;                &lt;int&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 1 [Very favorable]        7569 0.205    20.5\n2 2 [Somewhat favorable]    9424 0.255    25.5\n3 3 [Somewhat unfavorable]  5988 0.162    16.2\n4 4 [Very unfavorable]     13908 0.377    37.7\n\n\nThe dataset does come with a coarsened version of the favorability variable, which is useful if we’ll want to report raw favorability rates (i.e. if we don’t care about expressed intensity of opinion).\n\ntable(a$aoc_Favorable)\n\n\n    0     1 \n19896 16993 \n\n\nAnd it’s always good to check a variable is coded in the way we expect. One way to do that would be to run the following:\n\na %&gt;% count(cand_favorability_cortez, aoc_Favorable)\n\n# A tibble: 5 × 3\n  cand_favorability_cortez  aoc_Favorable     n\n  &lt;dbl+lbl&gt;                         &lt;dbl&gt; &lt;int&gt;\n1  1 [Very favorable]                   1  7569\n2  2 [Somewhat favorable]               1  9424\n3  3 [Somewhat unfavorable]             0  5988\n4  4 [Very unfavorable]                 0 13908\n5 NA                                   NA 25519\n\n\nThe preceding output suggests nothing went wrong.\nSo, we could use the binarized version of the cand_favorability_cortez variable (i.e. aoc_Favorable) to directly calculate an unweighted favorability rate\n\nmean(a$aoc_Favorable)\n\n[1] NA\n\n\nBut we need to drop missing variables!\n\nmean(a$aoc_Favorable, na.rm=T)\n\n[1] 0.4606522\n\n# OR\na %&gt;% filter(!is.na(aoc_Favorable)) %&gt;% pull(aoc_Favorable) %&gt;% mean()\n\n[1] 0.4606522\n\n\nBut to get a more accurate picture of the what the population thinks, we’ll want to upweight some observations and downweight others. To do, we could run:\n\na %&gt;% filter(!is.na(aoc_Favorable)) %&gt;%\n  summarise(weighted_favorability = weighted.mean(aoc_Favorable,w=weight))\n\n# A tibble: 1 × 1\n  weighted_favorability\n                  &lt;dbl&gt;\n1                 0.445\n\n\nOr we can used the pollster::topline() function:\n\nlibrary(pollster)\ntopline(df=a,\n        variable = aoc_Favorable,\n        weight=weight)\n\n# A tibble: 3 × 5\n  Response  Frequency Percent `Valid Percent` `Cumulative Percent`\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;                &lt;dbl&gt;\n1 0            20364.    32.6            55.5                 55.5\n2 1            16303.    26.1            44.5                100  \n3 (Missing)    25741.    41.2            NA                   NA  \n\n\nWe get the same answer here: 44.5%.\nGoing forward, we’ll only want to be reporting weighted calculations."
  },
  {
    "objectID": "2_toplines-and-cross-tabs.html#favorability-by-vote-choice-intent",
    "href": "2_toplines-and-cross-tabs.html#favorability-by-vote-choice-intent",
    "title": "2  Toplines and crosstabs",
    "section": "2.2 Favorability by vote choice (intent)",
    "text": "2.2 Favorability by vote choice (intent)\nLet’s calculate the AOC favorability rates again, but this time for different “types” of respondents. In other words, we want to show “cross-tabs”. (We won’t actually be showing tables - we’ll be displaying data from cross-tabs).\nLet’s consider the following types of voters:\n\nJoe Biden supporters\nDonald Trump supporters\n\nFirst we need to calculate what we eventually want to display visually. Here pollster::crosstab will be useful:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight)\n\n# A tibble: 3 × 6\n  trump_biden  `Very favorable` `Somewhat favorable` `Somewhat unfavorable`\n  &lt;fct&gt;                   &lt;dbl&gt;                &lt;dbl&gt;                  &lt;dbl&gt;\n1 Joe Biden               30.8                 40.5                    18.2\n2 Donald Trump             3.91                 7.31                   13.4\n3 Don't Know              13.9                 24.7                    26.0\n# ℹ 2 more variables: `Very unfavorable` &lt;dbl&gt;, n &lt;dbl&gt;\n\n\nThis is very good, but longer data would be even better - just add the format = \"long\" option:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight,\n                   format = \"long\") \n\n# A tibble: 12 × 4\n   trump_biden  cand_favorability_cortez   pct      n\n   &lt;fct&gt;        &lt;fct&gt;                    &lt;dbl&gt;  &lt;dbl&gt;\n 1 Joe Biden    Very favorable           30.8  18881.\n 2 Joe Biden    Somewhat favorable       40.5  18881.\n 3 Joe Biden    Somewhat unfavorable     18.2  18881.\n 4 Joe Biden    Very unfavorable         10.5  18881.\n 5 Donald Trump Very favorable            3.91 14695.\n 6 Donald Trump Somewhat favorable        7.31 14695.\n 7 Donald Trump Somewhat unfavorable     13.4  14695.\n 8 Donald Trump Very unfavorable         75.4  14695.\n 9 Don't Know   Very favorable           13.9   2989.\n10 Don't Know   Somewhat favorable       24.7   2989.\n11 Don't Know   Somewhat unfavorable     26.0   2989.\n12 Don't Know   Very unfavorable         35.3   2989.\n\n\nKeeping only the rows we care about, i.e. the first 8 rows, we can use the data object to make the following stacked bar chart:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight,\n                   format = \"long\") %&gt;%\n  filter(trump_biden!=\"Don't Know\") %&gt;%\n  ggplot(aes(x= fct_reorder(trump_biden,pct), \n             y = pct,fill=cand_favorability_cortez)) + \n  geom_col(width = .3) + \n      theme_classic() +\n  scale_fill_brewer(palette = \"RdGy\") +\n  labs(y=\"Percent\", x = \"2020 vote intent\", title = \"AOC favorability\")\n\n\n\n\nA different way to display the equivalent information would be the following:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight,\n                   format = \"long\") %&gt;%\n  filter(trump_biden!=\"Don't Know\") %&gt;%\n  ggplot(aes(x= fct_reorder(trump_biden,pct), \n             y = pct,fill=cand_favorability_cortez)) + \n  geom_col(width = .3, position = position_dodge()) + \n      theme_classic() +\n  scale_fill_brewer(palette = \"RdGy\") +\n  labs(y=\"Percent\", x = \"2020 vote intent\", title = \"AOC favorability\", fill=\"Evaluations\\nof AOC\")\n\n\n\n\nOr we can plot the (weighted) distribution of the binarized variable (aoc_Favorable), then simply use filter(aoc_Favorable==1), and again apply our friend geom_col():\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = aoc_Favorable,\n                   weight = weight,\n                   format = \"long\") %&gt;%\n  filter(aoc_Favorable==1, trump_biden!=\"Don't Know\") %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + \n  geom_col(width = .3,fill=c(\"blue3\",\"firebrick2\")) + \n      theme_classic() +\n  labs(x=\"Percent\", y = \"Supporters of...\", title = \"AOC favorability\") +\n  geom_label(aes(label=round(pct,1)))"
  },
  {
    "objectID": "2_toplines-and-cross-tabs.html#taking-a-step-getting-to-know-your-dataset",
    "href": "2_toplines-and-cross-tabs.html#taking-a-step-getting-to-know-your-dataset",
    "title": "2  Toplines and crosstabs",
    "section": "2.3 Taking a step: getting to know your dataset",
    "text": "2.3 Taking a step: getting to know your dataset\n\n2.3.1 List of variables\n\ndim(a)\n\n[1] 62408   889\n\nnames(a) %&gt;% head(n=40)\n\n [1] \"response_id\"                     \"start_date\"                     \n [3] \"right_track\"                     \"economy_better\"                 \n [5] \"interest\"                        \"registration\"                   \n [7] \"news_sources_facebook\"           \"news_sources_cnn\"               \n [9] \"news_sources_msnbc\"              \"news_sources_fox\"               \n[11] \"news_sources_network\"            \"news_sources_localtv\"           \n[13] \"news_sources_telemundo\"          \"news_sources_npr\"               \n[15] \"news_sources_amtalk\"             \"news_sources_new_york_times\"    \n[17] \"news_sources_local_newspaper\"    \"news_sources_other\"             \n[19] \"news_sources_other_TEXT\"         \"pres_approval\"                  \n[21] \"vote_intention\"                  \"vote_2016\"                      \n[23] \"vote_2016_other_text\"            \"consider_trump\"                 \n[25] \"not_trump\"                       \"primary_party\"                  \n[27] \"group_favorability_whites\"       \"group_favorability_blacks\"      \n[29] \"group_favorability_latinos\"      \"group_favorability_asians\"      \n[31] \"group_favorability_christians\"   \"group_favorability_socialists\"  \n[33] \"group_favorability_muslims\"      \"group_favorability_labor_unions\"\n[35] \"group_favorability_the_police\"   \"group_favorability_undocumented\"\n[37] \"group_favorability_lgbt\"         \"group_favorability_republicans\" \n[39] \"group_favorability_democrats\"    \"cand_favorability_trump\"        \n\n\n\n\n2.3.2 How many respondents were recruited each week?\n\n# Weekly number of respondents\na %&gt;% group_by(week) %&gt;% tally() %&gt;% head()\n\n# A tibble: 6 × 2\n  week           n\n  &lt;date&gt;     &lt;int&gt;\n1 2019-07-14  3906\n2 2019-07-21  5990\n3 2019-07-28  6236\n4 2019-08-04  6082\n5 2019-08-11  5097\n6 2019-08-18  7685\n\n\n\n\n2.3.3 What is the date range?\n\na %&gt;% summarise(first = min(date), last = max(date))\n\n# A tibble: 1 × 2\n  first      last      \n  &lt;date&gt;     &lt;date&gt;    \n1 2019-07-18 2019-09-25\n\n\n\n\n2.3.4 Plotting some decriptive statistics\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_bar(stat=\"identity\") +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\")\n\n\n\n\nWe could choose other options for the x-axis, using scale_x_date():\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_bar(stat=\"identity\") +\n  labs(x=\"Week of the year\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"2 weeks\", date_labels = \"%W\")\n\n\n\n\nNote that date_labels include various combinations of \"%B %Y\" or \"%b %y\", etc.:\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_bar(stat=\"identity\") +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"1 months\", minor_breaks = \"1 weeks\",date_labels = \"%B %Y\")\n\n\n\n\n\n\n2.3.5 Switching to a line graph\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + \n  geom_line() + \n  geom_point() +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"1 months\", minor_breaks = \"1 days\",date_labels = \"%b %y\")\n\n\n\n\n\n\n2.3.6 Modifying the y-axis range\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_line() + geom_point() +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"1 months\", minor_breaks = \"1 days\",date_labels = \"%B %Y\") +\n  ylim(c(0,8000))\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") \n\n# A tibble: 6 × 4\n  trump_biden  aoc_Favorable   pct      n\n  &lt;fct&gt;        &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n1 Joe Biden    0              28.7 18881.\n2 Joe Biden    1              71.3 18881.\n3 Donald Trump 0              88.8 14695.\n4 Donald Trump 1              11.2 14695.\n5 Don't Know   0              61.3  2989.\n6 Don't Know   1              38.7  2989.\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1)\n\n# A tibble: 3 × 4\n  trump_biden  aoc_Favorable   pct      n\n  &lt;fct&gt;        &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n1 Joe Biden    1              71.3 18881.\n2 Donald Trump 1              11.2 14695.\n3 Don't Know   1              38.7  2989.\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) \n# ggplot(aes(x= ..., y = ...))\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(x= trump_biden, y = pct)) + geom_col()\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(x= trump_biden, y = pct)) + geom_col()\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= trump_biden, x = pct)) + geom_col()\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= trump_biden, x = pct)) + geom_col() + theme_classic()\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col() + theme_classic() + ggtitle(\"AOC favorability\") \n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col() + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\")\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col(width = .3,fill=\"darkorange\") + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\") \n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col(width = .3,fill=\"darkorange\") + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\") +\n  geom_label(aes(label=pct))\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col(width = .3,fill=\"darkorange\") + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\") +\n  geom_label(aes(label=round(pct,1)))"
  },
  {
    "objectID": "3_B_timeseries.html",
    "href": "3_B_timeseries.html",
    "title": "3  Economic data over time",
    "section": "",
    "text": "library(tidyverse)\nD &lt;- read_csv(\"data_macro/inflation_WDI.csv\")\noecd &lt;- read_csv(\"data_macro/oced_codes.csv\")\n\n#biggerText &lt;- jzPack::biggerText\n\n# Merge in OECD indicators\nD &lt;- left_join(D,oecd)\n\nIn how many countries has inflation exceeded 10% in 2022:\n\nD %&gt;% \n  filter(year == 2022) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  count(over10)\n\n# A tibble: 2 × 2\n  over10     n\n   &lt;dbl&gt; &lt;int&gt;\n1      0    82\n2      1    45\n\n\n\nD %&gt;% \n  filter(year %in% c(2010:2022)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            over10 = sum(over10)) %&gt;%\n  ggplot(aes(x=year,y=over10)) +\n  geom_col() +\n  labs(y=\"\", x=\"Year\",\n       title = \"Number of countries with inflation 10%+\",\n       caption = \"Data: WDI\")\n\n\n\n\n\nD %&gt;% \n  filter(year %in% c(2010:2022)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over10)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_col() +\n  labs(y=\"\", x=\"Year\",\n       title = \"Proportion of countries where inflation exceeded 10%\",\n       caption = \"Data: WDI\")\n\n\n\n\nTher are some obivous problems with the x-axis here, so let’s solve that, plus a few minor issues:\n\nbarplot_V2 &lt;-  D %&gt;% \n  filter(year %in% c(2010:2022)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over10)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_col() +\n  labs(y=\"\", x=\"Year\",\n       title = \"Proportion of countries where inflation exceeded 10%\",\n       caption = \"Data: WDI\") +\n  scale_x_continuous(breaks = c(2010:2022)) +\n  scale_y_continuous(labels = scales::percent) +\n  theme(text = element_text(size=15)) +\n  theme_bw() \n\nbarplot_V2\n\n\n\n\nWe improves the labels of both axies, and increased the font size.\nThe new version is reasonably good, but there are still unnecessary gridlines, right?\nYou could either use theme_classic() instead of theme_bw().\n\nbarplot_V2 +\n  theme_classic() \n\n\n\n\nOr we can keep theme_bw() and make some adjustments:\n\nbarplot_V2 +\n  theme(panel.grid.minor.x = element_blank(),\n        panel.grid.major.x = element_blank())\n\n\n\n\n\n\n3.0.1 Zomm in on OECD countries and increase the time horizon\n\nD %&gt;% filter(OECD==1) %&gt;%\n  filter(!is.na(inflation)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over10)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_col() +\n  theme_bw() + \n  theme(text = element_text(size=15)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(y=\"\", x=\"Year\",\n       title = \"Proportion of countries where inflation exceeded 10% (OECD countries only)\")\n\n\n\n\n\nD %&gt;% \n  mutate(over5 = ifelse(inflation &gt; 5, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over5)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_line() + geom_point() +\n  theme_bw() + \n  theme(text = element_text(size=15)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(y=\"\", x=\"Year\",\n       title = \"GLobal proportion of countries where inflation exceeded 5%\",\n       caption = \"Data: WDI.\")\n\n\n\n\n\nD %&gt;% filter(OECD==1) %&gt;%\n  filter(!is.na(inflation)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(M = median(inflation)) %&gt;%\n  ggplot(aes(x=year,\n             y=M)) +\n  # geom_point() + geom_line() +\n  geom_col() +\n  theme_bw() + \n  theme(text = element_text(size=15)) +\n  labs(y=\"\", x=\"Year\",\n       title = \"Median inflation in OECD countries\")"
  },
  {
    "objectID": "3_standard-charts.html#faceting-by-party-id",
    "href": "3_standard-charts.html#faceting-by-party-id",
    "title": "4  Standard charts",
    "section": "4.1 Faceting by party ID",
    "text": "4.1 Faceting by party ID\nLet’s try to:\n\nadd facet_wrap(~pid)\nwhich means we also have to use group_by(pid) before running count()\n\n\nd2 %&gt;% group_by(pid) %&gt;%\n  count(goodevil) %&gt;%\n  mutate(percent = n/sum(n)*100) %&gt;%\n  ggplot(aes(y=as_factor(goodevil),x=percent,fill=as_factor(goodevil))) +\n  geom_col() + scale_fill_viridis_d() +\n  labs(x=\"Proportion of respondents\", y= \"\", fill = \"\", subtitle = \"Opinion: Politics is a battle between good and evil\", caption= \"Data: Uscinski et al. (AJPS, 2021).\") +\n  facet_wrap(~pid)\n\n\n\n\nWe really need to show the party labels, not their numbers.\nHere as_factor(variable) will work as long as variable is indeed labelled:\n\nd2 %&gt;% group_by(pid) %&gt;%\n  count(goodevil) %&gt;%\n  mutate(percent = n/sum(n)*100) %&gt;%\n  ggplot(aes(y=as_factor(goodevil),x=percent,fill=as_factor(goodevil))) +\n  geom_col() + scale_fill_viridis_d() +\n  labs(x=\"Proportion of respondents\", y= \"\", fill = \"\", subtitle = \"Opinion: Politics is a battle between good and evil\", caption= \"Data: Uscinski et al. (AJPS, 2021).\") +\n  facet_wrap(~as_factor(pid))\n\n\n\n\nAre stronger partisans are more Manichean on average?\n\nd2 %&gt;% group_by(pid) %&gt;%\n  count(goodevil) %&gt;%\n  mutate(percent = n/sum(n)*100) %&gt;%\n  ggplot(aes(y=as_factor(pid),x=percent,fill=as_factor(goodevil))) +\n  geom_col() +\n  scale_fill_viridis_d(alpha=.885) +\n  labs(x=\"Proportion of respondents\", y= \"\", fill = \"\",\n      title = \"Opinion: Politics is a battle between good and evil\", caption= \"Data: Uscinski et al. (AJPS, 2021).\")"
  },
  {
    "objectID": "3_standard-charts.html#showing-more-variables-together",
    "href": "3_standard-charts.html#showing-more-variables-together",
    "title": "4  Standard charts",
    "section": "4.2 Showing more variables together",
    "text": "4.2 Showing more variables together\nLet’s create several data objects: each of them will contain responses to the components of the conspiracy thinking scale:\n\npop2share &lt;- d2 %&gt;% \n              count(pop2) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(pop2)) %&gt;%\n              mutate(q = \"People who have studied for a long time\\nand have many diplomas do not really know\\nwhat makes the world go round.\")\n\nofficialshare &lt;- d2 %&gt;% \n              count(official) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(official)) %&gt;%\n              mutate(q = \"Official government accounts of events\\ncannot be trusted.\")\n\ncon1share &lt;- d2 %&gt;% \n              count(con1) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(con1)) %&gt;%\n              mutate(q = \"Even though we live in a democracy,\\na few people will always run things anyway\")\n\ncon4share &lt;- d2 %&gt;% \n              count(con4) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(con4)) %&gt;%\n              mutate(q = \"Much of our lives are being controlled\\nby plots hatched in secret places.\")\n\nCreate one larger data objhect:\n\nshareShow &lt;-\n  bind_rows(\n    pop2share,\n    officialshare,\n    con1share,\n    con4share\n  ) %&gt;%\n  filter(!is.na(categories))\n\nhead(shareShow)\n\n# A tibble: 6 × 8\n  pop2                           n percent categories q     official con1  con4 \n  &lt;dbl+lbl&gt;                  &lt;int&gt;   &lt;dbl&gt; &lt;fct&gt;      &lt;chr&gt; &lt;dbl+lb&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  1 [Strongly disagree]        72    3.56 Strongly … \"Peo… NA       NA    NA   \n2  2 [Disagree]                226   11.2  Disagree   \"Peo… NA       NA    NA   \n3  3 [Neither agree, nor di…   709   35.0  Neither a… \"Peo… NA       NA    NA   \n4  4 [Agree]                   633   31.3  Agree      \"Peo… NA       NA    NA   \n5  5 [Strongly agree]          383   18.9  Strongly … \"Peo… NA       NA    NA   \n6 NA                           107    5.29 Strongly … \"Off…  1 [Str… NA    NA   \n\n\nMake a plot:\n\nshareShow %&gt;%\n  ggplot(aes(y=as_factor(q),x=percent,fill=as_factor(categories))) +\n  geom_bar(position=\"stack\", stat=\"identity\", width = .5) +\n  jcolors::scale_fill_jcolors(palette = \"pal4\") +\n  theme_minimal() + theme(text = element_text(size=15)) +\n  labs(y = \"\",x = \"Percent\", fill = \"\",title = \"Uscinski et al. (AJPS, 2021) survey data\\non anti-establishment sentiment\")\n\n\n\n\nLook at the components of jcolors.\n\njcolors::display_all_jcolors()"
  },
  {
    "objectID": "3_standard-charts.html#putting-anti-establishment-thinking-on-the-2nd-axis",
    "href": "3_standard-charts.html#putting-anti-establishment-thinking-on-the-2nd-axis",
    "title": "4  Standard charts",
    "section": "4.3 Putting anti-establishment thinking on the 2nd axis",
    "text": "4.3 Putting anti-establishment thinking on the 2nd axis\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point() +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\") + theme_gray()\n\n\n\n\n\n\n\n\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point() +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point() +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point(color = \"purple\", alpha=.55) +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\", title = \"Conspiracy, populist, and Manichean orientations\\nare orthogonal to the standard partisan divide\", caption = \"Data: Uscinski et al. (AJPS, 2021).\") +\n  theme_minimal()"
  },
  {
    "objectID": "3_standard-charts.html#conspiratorial-orientation-and-pid",
    "href": "3_standard-charts.html#conspiratorial-orientation-and-pid",
    "title": "4  Standard charts",
    "section": "4.4 Conspiratorial orientation and PID",
    "text": "4.4 Conspiratorial orientation and PID\nIn principle, a box plot might make sense in this context…\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) +\n  theme_minimal() \n\n\n\n\nYou could simultaneously display all respondets (jittered):\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) +\n  geom_jitter(color=\"purple\",alpha=.4,width = .1) +\n  theme_minimal() \n\n\n\n\nMake small edits:\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) + \n  geom_jitter(color=\"purple\",alpha=.4,width = .1) + theme_minimal() +\n  labs(y=\"Conspiratorial thinking\\n(Average agreement with 4 questions)\",x = \"\")\n\n\n\n\n\n\n\n\nPerhaps even better:\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) + geom_jitter(color=\"purple\",alpha=.4,width = .1) + theme_minimal() +\n  labs(y=\"Conspiratorial thinking\\n(Average agreement with 4 questions)\",x = \"\",subtitle = \"Conspiratorial thinking is uncorrelated with partisanship\",\n       caption = \"Q1: Even though we live in a democracy, a few people will always run things anyway.\nQ2: The people who really run the country, are not known to the voters.\nQ3: Big events like wars, the recent recession, and the outcomes of elections are controlled\\nby small groups of people who are working in secret against the rest of us.\nQ4: Much of our lives are being controlled by plots hatched in secret places.\")"
  },
  {
    "objectID": "3_standard-charts.html#all-3-components-of-the-anti-est.-orienation",
    "href": "3_standard-charts.html#all-3-components-of-the-anti-est.-orienation",
    "title": "4  Standard charts",
    "section": "4.5 All 3 components of the anti-est. orienation",
    "text": "4.5 All 3 components of the anti-est. orienation\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=suspicion2)) +\n  geom_boxplot(fill=\"purple\", alpha=.2) +\n  geom_jitter(alpha=.2,width = .11,color=\"purple4\") +\n  theme_minimal() +\n  labs(y=\"Conspiratorial thinking + Populism + Manichean outlook\",x = \"\")"
  },
  {
    "objectID": "3_standard-charts.html#narcissism-as-a-correlate-for-conspiracy-thinking",
    "href": "3_standard-charts.html#narcissism-as-a-correlate-for-conspiracy-thinking",
    "title": "4  Standard charts",
    "section": "4.6 Narcissism as a correlate for conspiracy thinking?",
    "text": "4.6 Narcissism as a correlate for conspiracy thinking?\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges()\n\n\n\n\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges(\n    fill = \"#00AFBB\",\n    quantile_lines = TRUE, quantiles = 2,alpha = .9,color = \"white\") +\n  labs(y= \"I tend to want others to admire me\",x=\"Conspiracy thinking\")\n\n\n\n\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges(\n    fill = \"#00AFBB\",\n    quantile_lines = TRUE, quantiles = 2,alpha = .9,color = \"white\") +\n    xlim(0,1) + labs(y= \"I tend to want others to admire me\",x=\"Conspiracy thinking\")\n\n\n\n\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges(\n    fill = \"#00AFBB\",\n    quantile_lines = TRUE, quantiles = 2,alpha = .9,color = \"white\") +\n  xlim(0,1) + labs(y= \"I tend to want others to admire me\",\n       x = \"The horizontal dimension measures how strongly respondents exhibit 3 traits:\n1. Conspiratorial thinking (e.g. \\\"Our lives are controlled by secret plots\\\")\n2. Populist beliefs\n3. Manichean political views\",caption = \"Data: Uscinski et al. (AJPS, 2021).\")\n\n\n\n\n\nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=suspicion2)) +\n  geom_smooth() + labs(x = \"Narcissism\", y=\"Anti-establishment orientation\") \n\n\n\n\n\nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=suspicion2)) +\n  geom_smooth() + labs(x = \"Narcissism\", y=\"Anti-establishment orientation\") +\n  ggside::geom_xsidehistogram() +\n  ggside::ggside(x.pos = \"bottom\")"
  },
  {
    "objectID": "3_standard-charts.html#mainstream-news",
    "href": "3_standard-charts.html#mainstream-news",
    "title": "4  Standard charts",
    "section": "4.7 Mainstream news",
    "text": "4.7 Mainstream news\n\nggpubr::ggarrange(\n  d1 %&gt;%\n  ggplot(aes(x=suspicion2,y=msm)) +\n  geom_smooth() +\n  labs(x = \"Anti-establihment orientation\", y=\"Much of the mainstream news is deliberately slanted to mislead us\") +\n  ggside::geom_xsidehistogram() +\n  ggside::ggside(x.pos = \"bottom\") ,\n  \nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=msm)) +\n  geom_smooth() +\n  labs(x = \"Narcissism\", y=\"Much of the mainstream news is deliberately slanted to mislead us\") +\n  ggside::geom_xsidehistogram() +\n  ggside::ggside(x.pos = \"bottom\") \n)\n\n\n\n\n\n\n\ncollmod &lt;- lm(msm ~ clintonft*suspicion2, data=d1)\nggeffects::ggeffect(collmod, terms=c(\"suspicion2\",\"clintonft\")) %&gt;% plot() +\n  labs(color=\"Rating of Hillary Clinton\",y=\"Much of the mainstream news is deliberately slanted to mislead us\",\n       x=\"Anti-establishment orientation\",title=\"\")\n\n\n\n\n“I often disagree with conventional views about the world”\n\nggpubr::ggarrange(\nd1 %&gt;%\n  ggplot(aes(x=suspicion2,y=conwis)) +\n  geom_smooth() +\n  labs(x = \"Anti-establihment orientation\", y=\"I often disagree with conventional views about the world\") +\n  ylim(c(1,5)),\nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=conwis)) +\n  geom_smooth() +\n  labs(x = \"Narcissism\", y=\"I often disagree with conventional views about the world\") +\n  ylim(c(1,5))\n)"
  },
  {
    "objectID": "3_standard-charts.html#denial-of-climate-change",
    "href": "3_standard-charts.html#denial-of-climate-change",
    "title": "4  Standard charts",
    "section": "4.8 Denial of climate change",
    "text": "4.8 Denial of climate change\n\ntable(d2$climatechange)\n\n\n  1   2   3   4   5 \n733 454 395 233 206 \n\n\n\ntable(d2$climatechangeBIN)\n\n\n   0    1 \n1582  439 \n\n\n\nd2 %&gt;% count(climatechangeBIN)\n\n# A tibble: 3 × 2\n  climatechangeBIN     n\n             &lt;dbl&gt; &lt;int&gt;\n1                0  1582\n2                1   439\n3               NA     2\n\n\nAre the missing observations the same for the original and the recoded variable? (If not, we would want to check whether earlier code did something unintended.)\n\nd2 %&gt;% count(climatechangeBIN,climatechange)\n\n# A tibble: 6 × 3\n  climatechangeBIN climatechange     n\n             &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n1                0             1   733\n2                0             2   454\n3                0             3   395\n4                1             4   233\n5                1             5   206\n6               NA            NA     2"
  },
  {
    "objectID": "4_advanced-ggplot.html",
    "href": "4_advanced-ggplot.html",
    "title": "5  Advanced ggplot",
    "section": "",
    "text": "library(tidyverse)\nsource(\"data_AJPS2021/0_ajps_recode.R\")\n\nGrab a subset of variables (i.e. psychological measurements), and show the distribution of conspiracy thinking when respondents report a particular trait:\n\nx &lt;- c(\"argue1\", \"argue2\", \"argue3\", \"manip1\", \"manip2\", \"manip3\", \"manip4\", \n       \"attent1\", \"attent2\", \"attent3\", \"attent4\",\n       \"insens1\",\"insens2\",\"insens3\",\"insens4\")\n\n#d1$nondark &lt;- ifelse(d1$insens3 &lt;=2 & d1$manip4 &lt;=2 & d1$insens1&lt;=2, 1,0)\nd1$nondark &lt;- ifelse(d1$manipulate2 &lt;=.2 & d1$sociopathy2 &lt;= .2 & d1$attend2 &lt;=.2, 1,0)\n\n\n\n\n\n\nThe most important step is the following:\n\nd1 %&gt;% select(consp_Index2,\n              nondark,\n              all_of(x)) %&gt;% \n  pivot_longer(cols = -consp_Index2)\n\n# A tibble: 32,000 × 3\n   consp_Index2 name    value             \n          &lt;dbl&gt; &lt;chr&gt;   &lt;dbl+lbl&gt;         \n 1        0.938 nondark 0                 \n 2        0.938 argue1  3 [Neither]       \n 3        0.938 argue2  4 [Agree]         \n 4        0.938 argue3  4 [Agree]         \n 5        0.938 manip1  5 [Strongly agree]\n 6        0.938 manip2  5 [Strongly agree]\n 7        0.938 manip3  5 [Strongly agree]\n 8        0.938 manip4  5 [Strongly agree]\n 9        0.938 attent1 4 [Agree]         \n10        0.938 attent2 3 [Neither]       \n# ℹ 31,990 more rows\n\n\nAnd the full plot can be generated with the following code:\n\nd1 %&gt;% select(consp_Index2,\n              nondark,\n              all_of(x)) %&gt;% \n  pivot_longer(cols = -consp_Index2) %&gt;%\n  mutate(name2 = case_when(\n    name == \"argue1\" ~  \"I like to argue online with other people\",\n    name == \"argue2\" ~  \"I enjoy a good argument over a controversial issue\",\n    name == \"argue3\" ~  \"I am willing to express my opinion online\\neven if others strongly disagree with me\",\n    name == \"manip1\" ~  \"I tend to manipulate others to get my way\",\n    name == \"manip2\" ~  \"I have used deceit or lied to get my way\",\n    name == \"manip3\" ~  \"I have used flattery to get my way\",\n    name == \"manip4\" ~  \"I tend to exploit others towards my own end\",\n    name == \"attent1\" ~  \"I tend to want others to admire me\",\n    name == \"attent2\" ~  \"I tend to want others to pay attention to me\",\n    name == \"attent3\" ~  \"I tend to seek prestige or status\",\n    name == \"attent4\" ~  \"I tend to expect special favors from others\",\n    name == \"insens1\" ~ \"I tend to lack remorse\",\n    name == \"insens2\" ~ \"I tend to be unconcerned with the morality\\nof my actions\",\n    name == \"insens3\" ~ \"I tend to be callous or insensitive\",\n    name == \"insens4\" ~ \"I tend to be cynical\",\n    name == \"nondark\" ~ \"Low on narcissism, mach., and sociopathy\"\n  ),\n  concept = case_when(\n    name %in% c(\"argue1\",\"argue2\",\"argue3\") ~ \"Argumentativeness\",\n    name %in% c(\"manip1\", \"manip2\", \"manip3\", \"manip4\") ~ \"Machiavellianism\",\n    name %in% c(\"attent1\", \"attent2\", \"attent3\", \"attent4\") ~ \"Narcissism\",\n    name %in% c(\"insens1\",\"insens2\",\"insens3\",\"insens4\") ~ \"Sociopathy\",\n    name %in% c(\"nondark\") ~ \"Non-dark\"\n  )) %&gt;%\n  filter(!is.na(value) & !is.na(consp_Index2)) %&gt;%\n  mutate(agree = ifelse(value&gt;=5,1,0)) %&gt;% \n  group_by(name) %&gt;% mutate(avg_agree = mean(agree)) %&gt;%\n  group_by(name,agree) %&gt;% mutate(avg_cons = mean(consp_Index2)) %&gt;%\n  ungroup() %&gt;%\n  filter(agree==1 | (name==\"nondark\" & value==1)) %&gt;%\n  ggplot(aes(x=consp_Index2,y=fct_reorder(name2,avg_cons),\n             fill=concept)) +\n  ggridges::geom_density_ridges() +\n  theme_bw()  +\n  theme(legend.position = \"right\") +\n  labs(x=\"Conspiracy thinking\",y=\"\",color=\"\",fill=\"Concept\",\n       title = \"Distribution of conspiracy thinking\\nbroken down by responses to psychological questions\\nand color-coded by trait (dark triad + argumentativeness)\") +\n  #scale_fill_manual(values=Prism5) +\n  see::scale_fill_social() +\n  scale_x_continuous(limits = c(0,1))\n\n```{r}\n\n[See the lecture notes on the course website for additional code]"
  },
  {
    "objectID": "5_visualizing-models.html#nationscape-data",
    "href": "5_visualizing-models.html#nationscape-data",
    "title": "6  Visualizing statistical models",
    "section": "6.1 Nationscape data",
    "text": "6.1 Nationscape data\n\n# Read in Nationscape survey data:\nlibrary(tidyverse)\nlibrary(labelled)\na &lt;- readRDS(\"data_nationscape2019/Nationscape_first10waves.rds\")\n\n\n6.1.1 Association between sexism and AOC favorability over time\nWe estimate 10 separate model, aka “rolling regressions”.\nWe run one model for each value of week, and create a tibble thanks to the tidy()function:\n\na %&gt;% filter(\n         !is.na(aoc_Favorable),\n         !is.na(gender_att3_by1SD)) %&gt;%\n  group_by(week) %&gt;%\n  do(broom::tidy(lm(aoc_Favorable ~\n               gender_att3_by1SD +\n               age + college_grad +\n               White + Black + Hispanic, data = .))) %&gt;%\n    # Which coefficient we wish to pull:\n    filter(term == \"gender_att3_by1SD\") %&gt;%\n    ggplot(aes(x=week,y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error)) +\n  geom_pointrange(position = position_dodge(width = .45), size=.6) + labs(x=\"\",y=\"Coefficient estimate\",\n  color=\"Subset of respondents\") +\n  ggtitle(\"Association between sexism and AOC favorability\") +\n  geom_hline(yintercept=0, linetype=2) \n\n\n\n\nIt seems that the correlation between sexism and (lower) favorability of AOC is quite stable.\n\naoc_Favorable &lt;- a %&gt;% filter(\n         !is.na(aoc_Favorable),\n         !is.na(gender_att3_by1SD)) %&gt;%\n  group_by(pid3) %&gt;%\n  do(broom::tidy(lm(aoc_Favorable ~\n               gender_att3_by1SD +\n               age + college_grad +\n               White + Black + Hispanic, data = .)))\n\n\n\n6.1.2 Demographics\nWe can now plot any set of coefficients, of course.\nLet us try to see whether age correlates negatively with AOC’s favorability, as we might perhaps suspect:\n\naoc_Favorable %&gt;% filter(pid3 &lt;= 3 & term == \"age\") %&gt;%\n  ggplot(aes(x=as_factor(pid3),y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error,\n             shape = factor(pid3))) +\n  geom_pointrange() + labs(x=\"\",y=\"Coefficient estimate\",color=\"\")\n\n\n\n\nLet’s improve the design a little bit:\n\naoc_Favorable %&gt;% filter(pid3 &lt;= 3,term == \"age\") %&gt;%\n  ggplot(aes(x=as_factor(pid3),y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error,color=as_factor(pid3))) +\n  geom_pointrange(position = position_dodge(width = .45), size=.6) + labs(x=\"Model estimate among respondents who identified as a...\",y=\"Coefficient estimate\",\n  color=\"Subset of respondents\") +\n  ggtitle(\"Association between age and AOC favorability\") +\n  geom_hline(yintercept=0, linetype=2) \n\n\n\n\nNeed to fix the party colors:\n\naoc_Favorable %&gt;% filter(pid3 &lt;= 3,term == \"age\") %&gt;%\n  ggplot(aes(x=as_factor(pid3),y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error,color=as_factor(pid3))) +\n  geom_pointrange(position = position_dodge(width = .45), size=.6) + labs(x=\"Model estimate among respondents who identified as a...\",y=\"Coefficient estimate\",\n  color=\"Subset of respondents\") +\n  ggtitle(\"Association between age and AOC favorability\") +\n  geom_hline(yintercept=0, linetype=2) +\n  scale_color_manual(values = c(\"blue3\",\"darkred\",\"grey40\"))"
  },
  {
    "objectID": "5_visualizing-models.html#ajps-2021-data",
    "href": "5_visualizing-models.html#ajps-2021-data",
    "title": "6  Visualizing statistical models",
    "section": "6.2 AJPS (2021) data",
    "text": "6.2 AJPS (2021) data\n\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(labelled)\n\n# READ IN RECODED DATA\nsource(\"data_AJPS2021/0_ajps_recode.R\")\n\nWe now turn again to the dataset posted by Uscinski et al. (2021).\n\n# CT seems correlated with Trump FT among Dems\n# Pop seems correlated with Trump FT among Reps \n# Manich. correlated with Trump FT among all\n\nint1 &lt;- lm(cexaggerate ~ pid*pop_Index, data=d3)\nint2 &lt;- lm(trumpft ~ pid*pop_Index, data=d3)\nint3 &lt;- lm(trumpft ~ pid*consp_Index, data=d3)\nint4 &lt;- lm(trumpft ~ pid*goodevil + consp_Index + pop_Index, data=d3)\n\n\nggeffects::ggeffect(int1, terms=c(\"pid\",\"pop_Index\")) %&gt;% plot() +\n  labs(y=\"Climate change is exaggerated\",\n       x=\"PID (7=Strong Republican\",color=\"Populism\")"
  },
  {
    "objectID": "references.html#useful-resources-include",
    "href": "references.html#useful-resources-include",
    "title": "References",
    "section": "Useful resources include:",
    "text": "Useful resources include:\nGestalt Principles\nGestalt Principles (Part 2)\nhttps://socviz.co/\nhttps://ggplot2-book.org/index.html\nhttps://cssbook.net/content/chapter06.html\nhttps://storymaps.arcgis.com/stories/1e7f582d478a4b99bd0c70fffeac4c8b\nhttps://cup.columbia.edu/book/better-data-visualizations/9780231193115\nhttps://journals.sagepub.com/doi/pdf/10.1177/15291006211057899"
  }
]