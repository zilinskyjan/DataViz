[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visualization with R and ggplot",
    "section": "",
    "text": "Overview of this class\nSome say visualization is what you do when you “form a mental picture of something” or when you try to represent an object or a situation and “render it visible.” That’s fine, but this will be our definition:\nCreating effective visualizations of social and political data can help you discover and communicate new insights, and this website contains much of the material I use in my course designed to help students become better communicators with R. Most of what students would need to do can be accomplished with ggplot2.\nIf I had to compress the content of this course into just three lessons, I would say this:"
  },
  {
    "objectID": "index.html#lesson-1-think-of-output-from-statistical-models-as-data.-summarize-it-visually.",
    "href": "index.html#lesson-1-think-of-output-from-statistical-models-as-data.-summarize-it-visually.",
    "title": "Data Visualization with R and ggplot",
    "section": "Lesson 1: Think of output from statistical models as data. Summarize it visually.",
    "text": "Lesson 1: Think of output from statistical models as data. Summarize it visually.\nThere is a lot we can do after extracting relevant information from statistical models. Start asking yourself questions similar to these:\n\nWhat is the distribution of predictions when you change your machine learning algorithm?\nHow stable are coefficients from linear models across specifications?\nWhat do we lose/gain when we display aggregates (e.g. average marginal effects) rather than individual data-points?"
  },
  {
    "objectID": "index.html#lesson-2-the-first-chart-you-produce-is-your-draft-1.",
    "href": "index.html#lesson-2-the-first-chart-you-produce-is-your-draft-1.",
    "title": "Data Visualization with R and ggplot",
    "section": "Lesson 2: The first chart you produce is your “draft #1”.",
    "text": "Lesson 2: The first chart you produce is your “draft #1”.\nIterate and create reasonably clear and self-contained visual exhibits."
  },
  {
    "objectID": "index.html#lesson-3-just-because-you-have-a-tool-r-package-r-skills-in-your-hands-doesnt-mean-you-have-to-use-it.",
    "href": "index.html#lesson-3-just-because-you-have-a-tool-r-package-r-skills-in-your-hands-doesnt-mean-you-have-to-use-it.",
    "title": "Data Visualization with R and ggplot",
    "section": "Lesson 3: Just because you have a tool (R package / R skills) in your hands, doesn’t mean you have to use it.",
    "text": "Lesson 3: Just because you have a tool (R package / R skills) in your hands, doesn’t mean you have to use it.\nSometimes I show students a picture with a sign “No juggling of machetes”. After reading that sign, does anyone feel tempted to do what they are asked not to do? Maybe.\n\nBut even when we have the skills to do certain things, we should only be applying our skills when appropriate.\n\n\nStudents are encouraged to think creatively about visualizing different types of information and data. Significant coding experience with R is expected, but prior knowledge of issues related to design, style, and principles of data visualization is not required.\nAfter taking this course, students will be expected to be able to present real data clearly and to identify strengths and weakness of existing data displays and dashboards.\nWe will be graphing various types of evidence including:\n- macro-economic data\n- public opinion data\n- summaries of statistical models\n- quantitative representations of text (e.g. content of social media post and the accompanying metadata)"
  },
  {
    "objectID": "index.html#course-outline",
    "href": "index.html#course-outline",
    "title": "Data Visualization with R and ggplot",
    "section": "Course outline",
    "text": "Course outline\n\nIntroductory topics\n\nWhat works and what to avoid even if it works?\nPrinciples of visual perception and effect communication\nGetting familiar with ggplot\n\n\n\nUsing ggplot for data visualization\n- Toplines, cross-tabs\n- Geometries, statistics and coordinates\n- Facets, themes\n- Refining plots\n- 3-way cross-tabs\n- Heatmaps\n\n\nVisualizing output from statistical models\n- Coefficients and uncertainty\n- Predicted probabilities, marginal effects, and interactions\n- Model performance (in-sample and out-of-sample comparisons) \n- Machine learning output (regression trees, most important variables, etc.)\nIf you are taking this class for credit with me, these are the main expectations:"
  },
  {
    "objectID": "index.html#assignments",
    "href": "index.html#assignments",
    "title": "Data Visualization with R and ggplot",
    "section": "Assignments",
    "text": "Assignments\n\nCreate your own dataset\n\nCreate your own dataset. It needs to have at least one of these 3 attributes\n\nMultiple levels (at least 2).\nOriginal topic, subject or angle.\nImpressive scope\n\n\nFinal project\n\nForm a group of 2-3 students\nPrepare a compelling data visualization"
  },
  {
    "objectID": "1_principles.html#there-are-always-tradeoffs",
    "href": "1_principles.html#there-are-always-tradeoffs",
    "title": "1  Principles",
    "section": "1.1 There are always tradeoffs",
    "text": "1.1 There are always tradeoffs\nA frequent tradeoff can be thought of as truthfulness vs. simplicity.\nIn other words, you will need to balance:\n\nReadability vs. “completeness”\nConciseness vs. an “attention-gabbing” potential\nSimplicity vs. other goals\n\nIf you drop outliers, for example, your chart’s readability will almost surely improve. But it could be less truthful."
  },
  {
    "objectID": "1_principles.html#questions-to-ask-yourself",
    "href": "1_principles.html#questions-to-ask-yourself",
    "title": "1  Principles",
    "section": "1.2 Questions to ask yourself",
    "text": "1.2 Questions to ask yourself\n\nWhat chart type is appropriate for my situation?\n\nCan I try a few options?\nAnd is this a case where a (simple!) table would be more effective to communicate what you found?\n\nDid I spend at least a few minutes making some thoughtful design choice (amount of text, labels, annotations; color choice; font size) so that my chart is clear and reasonably self-contained?\n\nHow much data would you want to display? …to convey your findings clearly & credibly?\n\nHow much data is necessary?\n\n…to convince yourself that your story is truthful?"
  },
  {
    "objectID": "1_principles.html#back-to-readability-vs.-completeness",
    "href": "1_principles.html#back-to-readability-vs.-completeness",
    "title": "1  Principles",
    "section": "1.3 Back to readability vs. “completeness”",
    "text": "1.3 Back to readability vs. “completeness”\nIf you label a subset of your observations, then arguably some information “is lost”, unless you post your data.\n\n\nLoad the data\nlibrary(tidyverse)\n# Get fiscal data\nimf &lt;- read_csv(\"data_macro/imf-fiscalmonitor-apr2023.csv\")\n# Reformat data to wide and keep only the latest year\nimf_wide2022 &lt;- imf %&gt;% select(variable,country,`2022`) %&gt;%\n  pivot_wider(names_from = variable, values_from = `2022`)\n# Merge in inflation data:\ninf &lt;- read_csv(\"data_macro/inflation_WDI.csv\")\ninf2022 &lt;- inf %&gt;% filter(year==2022)\necon2022 &lt;- left_join(imf_wide2022,inf2022,by=\"country\")\n\n\nYou may agree that you should almost ever make graphs that look like this:\n\n\n\n\n\nWhen you can make charts like this instead:\n\n\n\n\n\nThe code for both charts is shown below. Notice something?\n\n\nShow code\n# Chart 1 (basic version; the draft 0)\n\necon2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,x=`Overall Balance`,label=country)) + \n  geom_point() +\n  geom_text() \n\n# Chart 2 (the cleaner version)\n\necon2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`)) + \n  geom_point() +\n  ggrepel::geom_text_repel(data=econ2022 %&gt;% \n                             filter(country %in% c(\"Italy\",\n                                                   \"Sweden\",\n                                                   \"United States\")),\n           aes(label=country),nudge_x=.25,nudge_y=1) +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Budget balance (% of GDP)\", y= \"Inflation (%)\") +\n  theme_classic() +\n  geom_hline(yintercept = 0,linetype=2,color=\"grey40\") +\n  geom_vline(xintercept = 0,linetype=2,color=\"grey40\")\n\n\nIt turns out that whoever the wrote the code decided to just drop a row (and not display Norway). I that OK?\n\n\nIs the balance data skewed?\necon2022 %&gt;% select(`Overall Balance`,country) %&gt;%\n  arrange(desc(`Overall Balance`))\n\n\n# A tibble: 36 × 2\n   `Overall Balance` country    \n               &lt;dbl&gt; &lt;chr&gt;      \n 1            22.4   Norway     \n 2             2.48  Denmark    \n 3             2.26  Cyprus     \n 4             1.20  Ireland    \n 5             0.670 Sweden     \n 6             0.441 Singapore  \n 7             0.206 Switzerland\n 8             0.134 Israel     \n 9            -0.242 Luxembourg \n10            -0.700 Canada     \n# ℹ 26 more rows"
  },
  {
    "objectID": "1_principles.html#example-making-scatterplots-better",
    "href": "1_principles.html#example-making-scatterplots-better",
    "title": "1  Principles",
    "section": "1.4 Example: Making scatterplots better",
    "text": "1.4 Example: Making scatterplots better\nStarting in 2021, inflation increased in many countries and became a source of serious concern for citizens and politicians. One set of substantive debates dealt with this set of questions: should governments be blamed for excessive spending (and borrowing)? Were fiscal decisions responsible for inflation? Here, we’ll deal with one potential approach to designing visual exhibits which might faciliate some international comparisons.1\nLet’s get some data (available via the Github repo)\n\nlibrary(tidyverse)\nimf &lt;- read_csv(\"https://raw.githubusercontent.com/zilinskyjan/DataViz/main/data_macro/imf-fiscalmonitor-apr2023.csv\")\n\nThe following variables are available, all expressed as percentages of GDP:\n\nunique(imf$variable)\n\n[1] \"General Government Expenditure\" \"Overall Balance\"               \n[3] \"Gross public debt\"             \n\n\nLet’s view the first 3 rows to get a sense of the structure:\n\nhead(imf,3)\n\n# A tibble: 3 × 12\n  variable       country `2014` `2015` `2016` `2017` `2018` `2019` `2020` `2021`\n  &lt;chr&gt;          &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 General Gover… Austra…   36.9   37.4   37.4   36.9   37.0   39.1   44.6   42.2\n2 General Gover… Austria   52.3   51.0   50.1   49.3   48.8   48.6   56.7   56.0\n3 General Gover… Belgium   55.6   53.7   53.1   52.0   52.3   51.9   58.9   55.5\n# ℹ 2 more variables: `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;\n\n\nIf we wanted each row to correspond to one country-year observation, we would run this snippet:\n\nimf %&gt;% pivot_longer(cols=`2014`:`2023`,\n                     names_to = 'year')  # this part is not necessary but it's useful\n\n# A tibble: 1,080 × 4\n   variable                       country   year  value\n   &lt;chr&gt;                          &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;\n 1 General Government Expenditure Australia 2014   36.9\n 2 General Government Expenditure Australia 2015   37.4\n 3 General Government Expenditure Australia 2016   37.4\n 4 General Government Expenditure Australia 2017   36.9\n 5 General Government Expenditure Australia 2018   37.0\n 6 General Government Expenditure Australia 2019   39.1\n 7 General Government Expenditure Australia 2020   44.6\n 8 General Government Expenditure Australia 2021   42.2\n 9 General Government Expenditure Australia 2022   38.4\n10 General Government Expenditure Australia 2023   39.0\n# ℹ 1,070 more rows\n\n\nBut we’ll focus here on year 2022, so let’s simply create 3 informative columns:\n\n# Reformat data to wide and keep only the latest year\nimf_wide2022 &lt;- imf %&gt;% select(variable,country,`2022`) %&gt;%\n  pivot_wider(names_from = variable, values_from = `2022`)\n\n\nimf_wide2022\n\n# A tibble: 36 × 4\n   country   General Government Expendit…¹ `Overall Balance` `Gross public debt`\n   &lt;chr&gt;                             &lt;dbl&gt;             &lt;dbl&gt;               &lt;dbl&gt;\n 1 Australia                          38.4            -3.30                 55.7\n 2 Austria                            52.4            -3.31                 77.8\n 3 Belgium                            53.7            -4.32                105. \n 4 Canada                             41.5            -0.700               107. \n 5 Croatia                            45.7            -0.943                67.5\n 6 Cyprus                             39.9             2.26                 86.5\n 7 Czechia                            44.8            -3.59                 42.3\n 8 Denmark                            49.2             2.48                 29.7\n 9 Estonia                            40.2            -1.15                 17.2\n10 Finland                            54.0            -1.86                 74.8\n# ℹ 26 more rows\n# ℹ abbreviated name: ¹​`General Government Expenditure`\n\n\nFinally, we want to add inflation data to our fiscal data:\n\n# Merge in inflation data:\ninf &lt;- read_csv(\"data_macro/inflation_WDI.csv\")\ninf2022 &lt;- inf %&gt;% filter(year==2022)\n\necon2022 &lt;- left_join(imf_wide2022,inf2022,by=\"country\")\n\nSo we will work with the econ2022 data object for a moment.\nThis chart displays the relationship between public budget deficits and inflation.\n\n# Make a simple plot:\necon2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`,\n         label=country)) + \n  geom_point() +\n  geom_text() +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Overall budget balance (% of GDP)\", y= \"Inflation (%)\")\n\n\n\n\nA few things to notice:\n\nWe are not displaying Norway (can you check why?)\nWe added an informative title to the scatterplot\nWe made the questionable choice to use geom_text() which uses what we placed inside aes(... label=country).\n\nThe same data can be displayed this way; ggrepel::geom_text_repel() is helpful in this context:\n\necon2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`,\n         label=country)) + \n  geom_point() +\n  ggrepel::geom_text_repel() +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Overall budget balance (% of GDP)\", y= \"Inflation (%)\")\n\n\n\n\nOr you can highlight a subset of subset of observations relevant for your analysis.\nLet’s create a vector of country names:\n\nsubset &lt;- c(\"Italy\",\"Sweden\",\"United States\")\n\nWe’ll want to insert data=econ2022 %&gt;% filter(country %in% subset) into geom_text_repel:\n\nscatter1 &lt;- econ2022 %&gt;%\n  filter(country != \"Norway\") %&gt;%\n  ggplot(aes(y=inflation,\n         x=`Overall Balance`)) + \n  geom_point() +\n  ggrepel::geom_text_repel(data=econ2022 %&gt;% \n                             filter(country %in% subset),\n           aes(label=country),nudge_x=.75,nudge_y=.75) +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Overall budget balance (% of GDP)\", y= \"Inflation (%)\") +\n  theme_classic()\n\nscatter1\n\n\n\n\nAdding a layer and selecting attributes for a specific subset of points is a general, more widely applicable, approach:\n\nscatter1 +\n  geom_point(data=econ2022 %&gt;% filter(country %in% subset),\n             color=\"red\")\n\n\n\n\nNote also that I also that it could have been tempting to label the x-axis as showing “Public deficit” because we almost always talk about deficits. But that would have been misleading, given that only negative values on the x-axis would have denoted the deficit.\nWe see that deficit spending is not informative: moderately high inflation was common across OECD countries; neither large deficits, nor budget surpluses, were prognostic of better/worse outcomes.\n\n1.4.1 Total government spending and (contemporaneous) inflation\nWhat about total government spending? We can check:\n\necon2022 %&gt;%\n  ggplot(aes(y=inflation,\n         x=`General Government Expenditure`)) + \n  geom_point() +\n  ggrepel::geom_text_repel(data=econ2022 %&gt;% \n                             filter(country %in% c(\"Italy\",\n                                                   \"Sweden\",\n                                                   \"United States\")),\n           aes(label=country),nudge_y=.5,nudge_x=-.5) +\n  labs(title = \"Economic situation in 2022\",\n        x=\"Public spending (% of GDP)\", y= \"Inflation (%)\") \n\n\n\n\nThis would seem to suggest that higher (government) spending is not necessarily associate with faster price growth.\nTo be sure, a more careful analysis here would require looking it changes in government expenditures."
  },
  {
    "objectID": "1_principles.html#inflation-magnitudes",
    "href": "1_principles.html#inflation-magnitudes",
    "title": "1  Principles",
    "section": "1.5 Inflation magnitudes",
    "text": "1.5 Inflation magnitudes\nHere a few ways to show how sharply inflation increased between 2021 in 2022 in most OECD countries:\n\n1.5.1 A basic dot plot\n\ninf %&gt;% filter(iso3c %in% econ2022$iso3c) %&gt;%\n  filter(year&gt;=2021) %&gt;%\n  mutate(avg = mean(inflation), .by = country) %&gt;%\n  ggplot(aes(x=inflation,\n             color= factor(year),\n             y=fct_reorder(country,avg))) +\n  geom_point() +\n  ggrepel::geom_text_repel(aes(label=round(inflation,1)),\n                           show.legend = FALSE) +\n  scale_color_brewer(palette = 2,type = \"qual\") +\n  labs(x=\"Inflation (%)\",y=\"\",color=\"Year\")\n\n\n\n\n\n\n1.5.2 A dumbbell chart\n\ninf %&gt;% filter(iso3c %in% econ2022$iso3c) %&gt;%\n  filter(year&gt;=2021) %&gt;%\n  mutate(avg = mean(inflation), .by = country) %&gt;%\n  ggplot(aes(x=inflation,\n             color= factor(year),\n             y=fct_reorder(country,avg))) +\n  geom_line(aes(group=country),color=\"grey50\") +\n  geom_point(size=2) +\n  scale_color_brewer(palette = 2,type = \"qual\") +\n  labs(x=\"Inflation (%)\",y=\"\",color=\"Year\")\n\n\n\n\nAbove we simply added a geom_line(aes(group=country),color=\"grey50\") and made sure that the line was plotted before the points were added for each country (for aesthetic reasons).\n\n\n1.5.3 A standard chart\nOr you could make a bar chart:\n\ninf %&gt;% filter(iso3c %in% econ2022$iso3c) %&gt;%\n  filter(year&gt;=2021) %&gt;%\n  mutate(avg = mean(inflation), .by = country) %&gt;%\n  ggplot(aes(x=inflation,\n             fill= factor(year),\n             y=fct_reorder(country,avg))) +\n  geom_col(position = position_dodge()) +\n  scale_fill_brewer(palette = 3,type = \"qual\") +\n  labs(x=\"Inflation (%)\",y=\"\",fill=\"Year\",title = \"Inflation in OECD countries\")\n\n\n\n\nNote that we:\n\nhad to change color to fill within aes()\n\nwe also had to make that change within labs()\nchanged scale_color_brewer to scale_fill_brewer\nreplaced geom_point() with geom_col(position = position_dodge())"
  },
  {
    "objectID": "1_principles.html#exercise-inflation-and-government-spending",
    "href": "1_principles.html#exercise-inflation-and-government-spending",
    "title": "1  Principles",
    "section": "1.6 Exercise: Inflation and government spending",
    "text": "1.6 Exercise: Inflation and government spending\nUse the provided datasets to explore whether an increase in government spending predicts (current or future) inflation.\nConsider the following issues and provide brief justifications:\n\nLet the focal year of interest be T = 2022. Is it sensible to compare T with T-1? What if the fiscal effect materializes with a lag? And would it be appropriate to compare current spending to pre-pandemic spending?\nShould past spending be subtracted from “current” spending at time T? If your answer is yes, remember that you would be reporting differences expressed in percentage points. (Don’t slip, using the symbol “%” would be misleading…)"
  },
  {
    "objectID": "1_principles.html#footnotes",
    "href": "1_principles.html#footnotes",
    "title": "1  Principles",
    "section": "",
    "text": "But also remember that evidence of this kind can inform factual debates but it wouldn’t settle the debate.↩︎"
  },
  {
    "objectID": "2_toplines-and-cross-tabs.html#ocasio-cortez-toplines",
    "href": "2_toplines-and-cross-tabs.html#ocasio-cortez-toplines",
    "title": "2  Toplines and crosstabs",
    "section": "2.1 Ocasio-Cortez toplines",
    "text": "2.1 Ocasio-Cortez toplines\nFirst, what percentage of respondents expressed favorable views of AOC?\nYou can look at the distribution of responses directly:\n\na %&gt;% count(cand_favorability_cortez) \n\n# A tibble: 5 × 2\n  cand_favorability_cortez      n\n  &lt;dbl+lbl&gt;                 &lt;int&gt;\n1  1 [Very favorable]        7569\n2  2 [Somewhat favorable]    9424\n3  3 [Somewhat unfavorable]  5988\n4  4 [Very unfavorable]     13908\n5 NA                        25519\n\n\nAnd you can report what proportion of respondents falls into each of the 4 relevant cells:\n\na %&gt;% count(cand_favorability_cortez) %&gt;%\n  mutate(prop = n / sum(n))\n\n# A tibble: 5 × 3\n  cand_favorability_cortez      n   prop\n  &lt;dbl+lbl&gt;                 &lt;int&gt;  &lt;dbl&gt;\n1  1 [Very favorable]        7569 0.121 \n2  2 [Somewhat favorable]    9424 0.151 \n3  3 [Somewhat unfavorable]  5988 0.0959\n4  4 [Very unfavorable]     13908 0.223 \n5 NA                        25519 0.409 \n\n\nNaturally, we’ll want to filter out missing observations (respondnets who were not asked the favorability quesiton):\n\na %&gt;% count(cand_favorability_cortez) %&gt;%\n  filter(!is.na(cand_favorability_cortez)) %&gt;%\n  mutate(prop = n / sum(n),\n         percent = prop*100)\n\n# A tibble: 4 × 4\n  cand_favorability_cortez     n  prop percent\n  &lt;dbl+lbl&gt;                &lt;int&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 1 [Very favorable]        7569 0.205    20.5\n2 2 [Somewhat favorable]    9424 0.255    25.5\n3 3 [Somewhat unfavorable]  5988 0.162    16.2\n4 4 [Very unfavorable]     13908 0.377    37.7\n\n\nThe dataset does come with a coarsened version of the favorability variable, which is useful if we’ll want to report raw favorability rates (i.e. if we don’t care about expressed intensity of opinion).\n\ntable(a$aoc_Favorable)\n\n\n    0     1 \n19896 16993 \n\n\nAnd it’s always good to check a variable is coded in the way we expect. One way to do that would be to run the following:\n\na %&gt;% count(cand_favorability_cortez, aoc_Favorable)\n\n# A tibble: 5 × 3\n  cand_favorability_cortez  aoc_Favorable     n\n  &lt;dbl+lbl&gt;                         &lt;dbl&gt; &lt;int&gt;\n1  1 [Very favorable]                   1  7569\n2  2 [Somewhat favorable]               1  9424\n3  3 [Somewhat unfavorable]             0  5988\n4  4 [Very unfavorable]                 0 13908\n5 NA                                   NA 25519\n\n\nThe preceding output suggests nothing went wrong.\nSo, we could use the binarized version of the cand_favorability_cortez variable (i.e. aoc_Favorable) to directly calculate an unweighted favorability rate\n\nmean(a$aoc_Favorable)\n\n[1] NA\n\n\nBut we need to drop missing variables!\n\nmean(a$aoc_Favorable, na.rm=T)\n\n[1] 0.4606522\n\n# OR\na %&gt;% filter(!is.na(aoc_Favorable)) %&gt;% pull(aoc_Favorable) %&gt;% mean()\n\n[1] 0.4606522\n\n\nBut to get a more accurate picture of the what the population thinks, we’ll want to upweight some observations and downweight others. To do, we could run:\n\na %&gt;% filter(!is.na(aoc_Favorable)) %&gt;%\n  summarise(weighted_favorability = weighted.mean(aoc_Favorable,w=weight))\n\n# A tibble: 1 × 1\n  weighted_favorability\n                  &lt;dbl&gt;\n1                 0.445\n\n\nOr we can used the pollster::topline() function:\n\nlibrary(pollster)\ntopline(df=a,\n        variable = aoc_Favorable,\n        weight=weight)\n\n# A tibble: 3 × 5\n  Response  Frequency Percent `Valid Percent` `Cumulative Percent`\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;                &lt;dbl&gt;\n1 0            20364.    32.6            55.5                 55.5\n2 1            16303.    26.1            44.5                100. \n3 (Missing)    25741.    41.2            NA                   NA  \n\n\nWe get the same answer here: 44.5%.\nGoing forward, we’ll only want to be reporting weighted calculations."
  },
  {
    "objectID": "2_toplines-and-cross-tabs.html#favorability-by-vote-choice-intent",
    "href": "2_toplines-and-cross-tabs.html#favorability-by-vote-choice-intent",
    "title": "2  Toplines and crosstabs",
    "section": "2.2 Favorability by vote choice (intent)",
    "text": "2.2 Favorability by vote choice (intent)\nLet’s calculate the AOC favorability rates again, but this time for different “types” of respondents. In other words, we want to show “cross-tabs”. (We won’t actually be showing tables - we’ll be displaying data from cross-tabs).\nLet’s consider the following types of voters:\n\nJoe Biden supporters\nDonald Trump supporters\n\nFirst we need to calculate what we eventually want to display visually. Here pollster::crosstab will be useful:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight)\n\n# A tibble: 3 × 6\n  trump_biden  `Very favorable` `Somewhat favorable` `Somewhat unfavorable`\n  &lt;fct&gt;                   &lt;dbl&gt;                &lt;dbl&gt;                  &lt;dbl&gt;\n1 Joe Biden               30.8                 40.5                    18.2\n2 Donald Trump             3.91                 7.31                   13.4\n3 Don't Know              13.9                 24.7                    26.0\n# ℹ 2 more variables: `Very unfavorable` &lt;dbl&gt;, n &lt;dbl&gt;\n\n\nThis is very good, but longer data would be even better - just add the format = \"long\" option:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight,\n                   format = \"long\") \n\n# A tibble: 12 × 4\n   trump_biden  cand_favorability_cortez   pct      n\n   &lt;fct&gt;        &lt;fct&gt;                    &lt;dbl&gt;  &lt;dbl&gt;\n 1 Joe Biden    Very favorable           30.8  18881.\n 2 Joe Biden    Somewhat favorable       40.5  18881.\n 3 Joe Biden    Somewhat unfavorable     18.2  18881.\n 4 Joe Biden    Very unfavorable         10.5  18881.\n 5 Donald Trump Very favorable            3.91 14695.\n 6 Donald Trump Somewhat favorable        7.31 14695.\n 7 Donald Trump Somewhat unfavorable     13.4  14695.\n 8 Donald Trump Very unfavorable         75.4  14695.\n 9 Don't Know   Very favorable           13.9   2989.\n10 Don't Know   Somewhat favorable       24.7   2989.\n11 Don't Know   Somewhat unfavorable     26.0   2989.\n12 Don't Know   Very unfavorable         35.3   2989.\n\n\nKeeping only the rows we care about, i.e. the first 8 rows, we can use the data object to make the following stacked bar chart:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight,\n                   format = \"long\") %&gt;%\n  filter(trump_biden!=\"Don't Know\") %&gt;%\n  ggplot(aes(x= fct_reorder(trump_biden,pct), \n             y = pct,fill=cand_favorability_cortez)) + \n  geom_col(width = .3) + \n      theme_classic() +\n  scale_fill_brewer(palette = \"RdGy\") +\n  labs(y=\"Percent\", x = \"2020 vote intent\", title = \"AOC favorability\")\n\n\n\n\nA different way to display the equivalent information would be the following:\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = cand_favorability_cortez,\n                   weight = weight,\n                   format = \"long\") %&gt;%\n  filter(trump_biden!=\"Don't Know\") %&gt;%\n  ggplot(aes(x= fct_reorder(trump_biden,pct), \n             y = pct,fill=cand_favorability_cortez)) + \n  geom_col(width = .3, position = position_dodge()) + \n      theme_classic() +\n  scale_fill_brewer(palette = \"RdGy\") +\n  labs(y=\"Percent\", x = \"2020 vote intent\", title = \"AOC favorability\", fill=\"Evaluations\\nof AOC\")\n\n\n\n\nOr we can plot the (weighted) distribution of the binarized variable (aoc_Favorable), then simply use filter(aoc_Favorable==1), and again apply our friend geom_col():\n\npollster::crosstab(df = a, \n                   x = trump_biden, \n                   y = aoc_Favorable,\n                   weight = weight,\n                   format = \"long\") %&gt;%\n  filter(aoc_Favorable==1, trump_biden!=\"Don't Know\") %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + \n  geom_col(width = .3,fill=c(\"blue3\",\"firebrick2\")) + \n      theme_classic() +\n  labs(x=\"Percent\", y = \"Supporters of...\", title = \"AOC favorability\") +\n  geom_label(aes(label=round(pct,1)))"
  },
  {
    "objectID": "2_toplines-and-cross-tabs.html#taking-a-step-back-getting-to-know-your-dataset",
    "href": "2_toplines-and-cross-tabs.html#taking-a-step-back-getting-to-know-your-dataset",
    "title": "2  Toplines and crosstabs",
    "section": "2.3 Taking a step back: getting to know your dataset",
    "text": "2.3 Taking a step back: getting to know your dataset\n\n2.3.1 List of variables\n\ndim(a)\n\n[1] 62408   889\n\nnames(a) %&gt;% head(n=40)\n\n [1] \"response_id\"                     \"start_date\"                     \n [3] \"right_track\"                     \"economy_better\"                 \n [5] \"interest\"                        \"registration\"                   \n [7] \"news_sources_facebook\"           \"news_sources_cnn\"               \n [9] \"news_sources_msnbc\"              \"news_sources_fox\"               \n[11] \"news_sources_network\"            \"news_sources_localtv\"           \n[13] \"news_sources_telemundo\"          \"news_sources_npr\"               \n[15] \"news_sources_amtalk\"             \"news_sources_new_york_times\"    \n[17] \"news_sources_local_newspaper\"    \"news_sources_other\"             \n[19] \"news_sources_other_TEXT\"         \"pres_approval\"                  \n[21] \"vote_intention\"                  \"vote_2016\"                      \n[23] \"vote_2016_other_text\"            \"consider_trump\"                 \n[25] \"not_trump\"                       \"primary_party\"                  \n[27] \"group_favorability_whites\"       \"group_favorability_blacks\"      \n[29] \"group_favorability_latinos\"      \"group_favorability_asians\"      \n[31] \"group_favorability_christians\"   \"group_favorability_socialists\"  \n[33] \"group_favorability_muslims\"      \"group_favorability_labor_unions\"\n[35] \"group_favorability_the_police\"   \"group_favorability_undocumented\"\n[37] \"group_favorability_lgbt\"         \"group_favorability_republicans\" \n[39] \"group_favorability_democrats\"    \"cand_favorability_trump\"        \n\n\n\n\n2.3.2 How many respondents were recruited each week?\n\n# Weekly number of respondents\na %&gt;% group_by(week) %&gt;% tally() %&gt;% head()\n\n# A tibble: 6 × 2\n  week           n\n  &lt;date&gt;     &lt;int&gt;\n1 2019-07-14  3906\n2 2019-07-21  5990\n3 2019-07-28  6236\n4 2019-08-04  6082\n5 2019-08-11  5097\n6 2019-08-18  7685\n\n\n\n\n2.3.3 What is the date range?\n\na %&gt;% summarise(first = min(date), last = max(date))\n\n# A tibble: 1 × 2\n  first      last      \n  &lt;date&gt;     &lt;date&gt;    \n1 2019-07-18 2019-09-25\n\n\n\n\n2.3.4 Plotting some decriptive statistics\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_bar(stat=\"identity\") +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\")\n\n\n\n\nWe could choose other options for the x-axis, using scale_x_date():\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_bar(stat=\"identity\") +\n  labs(x=\"Week of the year\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"2 weeks\", date_labels = \"%W\")\n\n\n\n\nNote that date_labels include various combinations of \"%B %Y\" or \"%b %y\", etc.:\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_bar(stat=\"identity\") +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"1 months\", minor_breaks = \"1 weeks\",date_labels = \"%B %Y\")\n\n\n\n\n\n\n2.3.5 Switching to a line graph\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + \n  geom_line() + \n  geom_point() +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"1 months\", minor_breaks = \"1 days\",date_labels = \"%b %y\")\n\n\n\n\n\n\n2.3.6 Modifying the y-axis range\n\na %&gt;% group_by(week) %&gt;% tally() %&gt;%\n  ggplot(aes(x=week,y=n)) + geom_line() + geom_point() +\n  labs(x=\"\",y=\"Respondents\",title=\"Weekly number of Nationscape respondents\") +\n  scale_x_date(date_breaks = \"1 months\", minor_breaks = \"1 days\",date_labels = \"%B %Y\") +\n  ylim(c(0,8000))\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") \n\n# A tibble: 6 × 4\n  trump_biden  aoc_Favorable   pct      n\n  &lt;fct&gt;        &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n1 Joe Biden    0              28.7 18881.\n2 Joe Biden    1              71.3 18881.\n3 Donald Trump 0              88.8 14695.\n4 Donald Trump 1              11.2 14695.\n5 Don't Know   0              61.3  2989.\n6 Don't Know   1              38.7  2989.\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1)\n\n# A tibble: 3 × 4\n  trump_biden  aoc_Favorable   pct      n\n  &lt;fct&gt;        &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n1 Joe Biden    1              71.3 18881.\n2 Donald Trump 1              11.2 14695.\n3 Don't Know   1              38.7  2989.\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) \n# ggplot(aes(x= ..., y = ...))\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(x= trump_biden, y = pct)) + geom_col()\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(x= trump_biden, y = pct)) + geom_col()\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= trump_biden, x = pct)) + geom_col()\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= trump_biden, x = pct)) + geom_col() + theme_classic()\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col() + theme_classic() + ggtitle(\"AOC favorability\") \n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col() + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\")\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col(width = .3,fill=\"darkorange\") + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\") \n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col(width = .3,fill=\"darkorange\") + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\") +\n  geom_label(aes(label=pct))\n\n\n\n\n\npollster::crosstab(df = a, x = trump_biden, \n                        y = aoc_Favorable,weight = weight,format = \"long\") %&gt;%\n  filter(aoc_Favorable==1) %&gt;%\n  ggplot(aes(y= fct_reorder(trump_biden,pct), \n             x = pct)) + geom_col(width = .3,fill=\"darkorange\") + theme_classic() +\n  labs(x=\"Percent\", y = \"\", title = \"AOC favorability\") +\n  geom_label(aes(label=round(pct,1)))"
  },
  {
    "objectID": "3_B_timeseries.html#analysis-of-inflation-patterns",
    "href": "3_B_timeseries.html#analysis-of-inflation-patterns",
    "title": "3  Economic data over time",
    "section": "3.1 Analysis of inflation patterns",
    "text": "3.1 Analysis of inflation patterns\nIn how many countries has inflation exceeded 10% in 2022:\n\nD %&gt;% \n  filter(year == 2022) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  count(over10)\n\n# A tibble: 2 × 2\n  over10     n\n   &lt;dbl&gt; &lt;int&gt;\n1      0    82\n2      1    45\n\n\n\nD %&gt;% \n  filter(year %in% c(2010:2022)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            over10 = sum(over10)) %&gt;%\n  ggplot(aes(x=year,y=over10)) +\n  geom_col() +\n  labs(y=\"\", x=\"Year\",\n       title = \"Number of countries with inflation 10%+\",\n       caption = \"Data: WDI\")\n\n\n\n\n\nD %&gt;% \n  filter(year %in% c(2010:2022)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over10)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_col() +\n  labs(y=\"\", x=\"Year\",\n       title = \"Proportion of countries where inflation exceeded 10%\",\n       caption = \"Data: WDI\")\n\n\n\n\nTher are some obivous problems with the x-axis here, so let’s solve that, plus a few minor issues:\n\nbarplot_V2 &lt;-  D %&gt;% \n  filter(year %in% c(2010:2022)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over10)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_col() +\n  labs(y=\"\", x=\"Year\",\n       title = \"Proportion of countries where inflation exceeded 10%\",\n       caption = \"Data: WDI\") +\n  scale_x_continuous(breaks = c(2010:2022)) +\n  scale_y_continuous(labels = scales::percent) +\n  theme(text = element_text(size=15)) +\n  theme_bw() \n\nbarplot_V2\n\n\n\n\nWe improves the labels of both axies, and increased the font size.\nThe new version is reasonably good, but there are still unnecessary gridlines, right?\nYou could either use theme_classic() instead of theme_bw().\n\nbarplot_V2 +\n  theme_classic() \n\n\n\n\nOr we can keep theme_bw() and make some adjustments:\n\nbarplot_V2 +\n  theme(panel.grid.minor.x = element_blank(),\n        panel.grid.major.x = element_blank())\n\n\n\n\n\nD %&gt;% \n  filter(!is.na(inflation)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(x=year,\n             y=over10)) +\n  geom_col() +\n  theme_bw() + \n  theme(text = element_text(size=14)) +\n  labs(y=\"\", x=\"Year\",\n       subtitle = \"Number of countries where inflation exceeded 10%\",\n       caption = \"Data: WDI.\")\n\n\n\n\n\n\n3.1.1 Zoom in on OECD countries and increase the time horizon\n\nD %&gt;% filter(OECD==1) %&gt;%\n  filter(!is.na(inflation)) %&gt;%\n  mutate(over10 = ifelse(inflation &gt; 10, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over10)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_col() +\n  theme_bw() + \n  theme(text = element_text(size=15)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(y=\"\", x=\"Year\",\n       title = \"Proportion of countries where inflation exceeded 10%\\n(OECD countries only)\")\n\n\n\n\n\nD %&gt;% \n  mutate(over5 = ifelse(inflation &gt; 5, 1, 0)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(n = n(),\n            prop = sum(over5)/n) %&gt;% \n  ggplot(aes(x=year,\n             y=prop)) +\n  geom_line() + geom_point() +\n  theme_bw() + \n  theme(text = element_text(size=15)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(y=\"\", x=\"Year\",\n       subtitle = \"Global proportion of countries where inflation exceeded 5%\",\n       caption = \"Data: WDI.\")\n\n\n\n\n\nD %&gt;% filter(OECD==1) %&gt;%\n  filter(!is.na(inflation)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(M = median(inflation)) %&gt;%\n  ggplot(aes(x=year,\n             y=M)) +\n  # geom_point() + geom_line() +\n  geom_col() +\n  theme_bw() + \n  theme(text = element_text(size=15)) +\n  labs(y=\"\", x=\"Year\",\n       title = \"Median inflation in OECD countries\")"
  },
  {
    "objectID": "3_B_timeseries.html#analysis-of-stock-returns",
    "href": "3_B_timeseries.html#analysis-of-stock-returns",
    "title": "3  Economic data over time",
    "section": "3.2 Analysis of stock returns",
    "text": "3.2 Analysis of stock returns\nGet data on stocks prices:\n\nlibrary(tidyquant)\nstocks &lt;- tq_get(c(\"NVDA\", \"AVGO\",\"^GSPC\"),\n                 from = \"2022-015-01\",\n                 to = \"2024-06-05\")\n\n\nstocks %&gt;%\n ggplot(aes(x = date, y = adjusted, color = symbol)) +\n geom_line() +\n theme_minimal() +\n labs(title = \"NVIDIA vs Broadcom Stock Prices\",\n      y = \"Adjusted Price\",\n      color = \"Stock\")\n\n\n\n\nCalculate returns\n\nreturns &lt;- stocks %&gt;%\n group_by(symbol) %&gt;%\n tq_transmute(select = adjusted,\n              mutate_fun = periodReturn,\n              period = \"daily\",\n              col_rename = \"ret\") %&gt;%\n ungroup() %&gt;%\n pivot_wider(names_from = symbol,\n             values_from = ret) %&gt;%\n na.omit()\n\nCalculate rolling correlations:\n\nreturns$roll_cor &lt;- zoo::rollapply(data = returns[, c(\"NVDA\", \"AVGO\")],\n                              width = 30,\n                              FUN = function(x) cor(x[,1], x[,2]),\n                              by.column = FALSE,\n                              align = \"right\",\n                              fill = NA)\n\nreturns$roll_corNVSP &lt;- zoo::rollapply(data = returns[, c(\"NVDA\", \"^GSPC\")],\n                                   width = 60,\n                                   FUN = function(x) cor(x[,1], x[,2]),\n                                   by.column = FALSE,\n                                   align = \"right\",\n                                   fill = NA)\n\n\nreturns %&gt;%\n filter(date &gt;= \"2022-04-01\") %&gt;%\nggplot(aes(x = date, y = roll_cor)) +\n geom_line(color = \"blue\") +\n geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n theme_minimal() +\n labs(subtitle = \"30-Day Rolling Correlation of Daily Returns: NVIDIA vs Broadcom\",\n      title = \"Do semiconductor industry giants move together?\",\n      y = \"Correlation Coefficient\",\n      x = \"Date\") +\n scale_y_continuous(limits = c(-.5, 1))\n\n\n\n\n\nreturns %&gt;%\n filter(date &gt;= \"2022-04-01\") %&gt;%\n ggplot(aes(x = date, y = roll_corNVSP)) +\n geom_line(color = \"blue\") +\n geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n theme_minimal() +\n labs(subtitle = \"60-Day Rolling Correlation of Daily Returns: NVIDIA vs SP500\",\n      title = \"Do semiconductor industry giants move together?\",\n      y = \"Correlation Coefficient\",\n      x = \"Date\") +\n scale_y_continuous(limits = c(-.5, 1))\n\n\n\n\nScatterplots of returns\n\nggplot(returns, aes(x = NVDA, y = AVGO)) +\n geom_point() +\n geom_smooth(method = \"lm\") +\n labs(title = \"Scatterplot of Daily Returns\",\n      x = \"NVIDIA\",\n      y = \"Broadcom\") +\n geom_abline(intercept = 0, slope = 1, \n             color = \"red3\",linetype=2,linewidth=1) \n\n\n\n\n\nggplot(returns, aes(x = NVDA, y = AVGO)) +\n geom_point() +\n labs(title = \"Scatterplot of Daily Returns\",\n      x = \"NVIDIA\",\n      y = \"Broadcom\")\n\n\n\n\n\nggplot(returns, aes(x = `^GSPC`, y = AVGO)) +\n geom_point() +\n labs(title = \"Scatterplot of Daily Returns\",\n      x = \"S&P500\",\n      y = \"Broadcom\")\n\n\n\n\n\nggplot(returns, aes(x = `^GSPC`, y = NVDA)) +\n geom_point() +\n labs(title = \"Scatterplot of Daily Returns\",\n      x = \"S&P500\",\n      y = \"NVIDIA\")\n\n\n\n\nLet’s also look at correlation during different market conditions\n\nreturns %&gt;%\n mutate(year = year(date)) %&gt;%\n group_by(year) %&gt;%\n summarize(correlation = cor(NVDA, AVGO)) %&gt;%\n print()\n\n# A tibble: 4 × 2\n   year correlation\n  &lt;dbl&gt;       &lt;dbl&gt;\n1  2022       0.828\n2  2023       0.532\n3  2024       0.568\n4  2025       0.796\n\n\n\nreturns %&gt;% mutate(ym = floor_date(date,\"month\")) %&gt;%\n group_by(ym) %&gt;%\n summarize(correlation = cor(NVDA, `^GSPC`)) %&gt;%\n ggplot(aes(x = ym, y = correlation)) +\n geom_col()"
  },
  {
    "objectID": "3_standard-charts.html#faceting-by-party-id",
    "href": "3_standard-charts.html#faceting-by-party-id",
    "title": "4  Standard charts",
    "section": "4.1 Faceting by party ID",
    "text": "4.1 Faceting by party ID\nLet’s try to:\n\nadd facet_wrap(~pid)\nwhich means we also have to use group_by(pid) before running count()\n\n\nd2 %&gt;% group_by(pid) %&gt;%\n  count(goodevil) %&gt;%\n  mutate(percent = n/sum(n)*100) %&gt;%\n  ggplot(aes(y=as_factor(goodevil),x=percent,fill=as_factor(goodevil))) +\n  geom_col() + scale_fill_viridis_d() +\n  labs(x=\"Proportion of respondents\", y= \"\", fill = \"\", subtitle = \"Opinion: Politics is a battle between good and evil\", caption= \"Data: Uscinski et al. (AJPS, 2021).\") +\n  facet_wrap(~pid) \n\n\n\n\nAlso, we really need to show the party labels, not their numbers.\nHere as_factor(variable) will work as long as variable is indeed labelled:\n\nd2 %&gt;% group_by(pid) %&gt;%\n  count(goodevil) %&gt;%\n  mutate(percent = n/sum(n)*100) %&gt;%\n  ggplot(aes(y=as_factor(goodevil),x=percent,fill=as_factor(goodevil))) +\n  geom_col() + scale_fill_viridis_d() +\n  labs(x=\"Proportion of respondents\", y= \"\", fill = \"\", subtitle = \"Opinion: Politics is a battle between good and evil\", caption= \"Data: Uscinski et al. (AJPS, 2021).\") +\n  facet_wrap(~as_factor(pid)) +\n    theme(text=element_text(size=9))\n\n\n\n\nNote that we often want to increase the size of the text elements (theme(text=element_text(size=...))) but in this case I’m actually making the text smaller so that facet labels fit on the page.\nAre stronger partisans are more Manichean on average?\n\nd2 %&gt;% group_by(pid) %&gt;%\n  count(goodevil) %&gt;%\n  mutate(percent = n/sum(n)*100) %&gt;%\n  ggplot(aes(y=as_factor(pid),x=percent,fill=as_factor(goodevil))) +\n  geom_col() +\n  scale_fill_viridis_d(alpha=.885) +\n  labs(x=\"Proportion of respondents\", y= \"\", fill = \"\",\n      title = \"Opinion: Politics is a battle between good and evil\", caption= \"Data: Uscinski et al. (AJPS, 2021).\")"
  },
  {
    "objectID": "3_standard-charts.html#showing-more-variables-together",
    "href": "3_standard-charts.html#showing-more-variables-together",
    "title": "4  Standard charts",
    "section": "4.2 Showing more variables together",
    "text": "4.2 Showing more variables together\nLet’s create several data objects: each of them will contain responses to the components of the conspiracy thinking scale:\n\npop2share &lt;- d2 %&gt;% \n              count(pop2) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(pop2)) %&gt;%\n              mutate(q = \"People who have studied for a long time\\nand have many diplomas do not really know\\nwhat makes the world go round.\")\n\nofficialshare &lt;- d2 %&gt;% \n              count(official) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(official)) %&gt;%\n              mutate(q = \"Official government accounts of events\\ncannot be trusted.\")\n\ncon1share &lt;- d2 %&gt;% \n              count(con1) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(con1)) %&gt;%\n              mutate(q = \"Even though we live in a democracy,\\na few people will always run things anyway\")\n\ncon4share &lt;- d2 %&gt;% \n              count(con4) %&gt;%\n              mutate(percent = n/sum(n)*100) %&gt;%\n              mutate(categories = as_factor(con4)) %&gt;%\n              mutate(q = \"Much of our lives are being controlled\\nby plots hatched in secret places.\")\n\nCreate one larger data objhect:\n\nshareShow &lt;-\n  bind_rows(\n    pop2share,\n    officialshare,\n    con1share,\n    con4share\n  ) %&gt;%\n  filter(!is.na(categories))\n\nhead(shareShow)\n\n# A tibble: 6 × 8\n  pop2                           n percent categories q     official con1  con4 \n  &lt;dbl+lbl&gt;                  &lt;int&gt;   &lt;dbl&gt; &lt;fct&gt;      &lt;chr&gt; &lt;dbl+lb&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  1 [Strongly disagree]        72    3.56 Strongly … \"Peo… NA       NA    NA   \n2  2 [Disagree]                226   11.2  Disagree   \"Peo… NA       NA    NA   \n3  3 [Neither agree, nor di…   709   35.0  Neither a… \"Peo… NA       NA    NA   \n4  4 [Agree]                   633   31.3  Agree      \"Peo… NA       NA    NA   \n5  5 [Strongly agree]          383   18.9  Strongly … \"Peo… NA       NA    NA   \n6 NA                           107    5.29 Strongly … \"Off…  1 [Str… NA    NA   \n\n\nMake a plot:\n\nshareShow %&gt;%\n  ggplot(aes(y=as_factor(q),x=percent,fill=as_factor(categories))) +\n  geom_bar(position=\"stack\", stat=\"identity\", width = .5) +\n  jcolors::scale_fill_jcolors(palette = \"pal4\") +\n  theme_minimal() + theme(text = element_text(size=15)) +\n  labs(y = \"\",x = \"Percent\", fill = \"\",title = \"Uscinski et al. (AJPS, 2021) survey data\\non anti-establishment sentiment\")\n\n\n\n\nLook at the components of jcolors.\n\njcolors::display_all_jcolors()"
  },
  {
    "objectID": "3_standard-charts.html#putting-anti-establishment-thinking-on-the-2nd-axis",
    "href": "3_standard-charts.html#putting-anti-establishment-thinking-on-the-2nd-axis",
    "title": "4  Standard charts",
    "section": "4.3 Putting anti-establishment thinking on the 2nd axis",
    "text": "4.3 Putting anti-establishment thinking on the 2nd axis\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point() +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\") + theme_gray()\n\n\n\n\n\n\n\n\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point() +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point() +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nd1 %&gt;% ggplot(aes(x = leftright2, y = suspicion2)) +\n  geom_point(color = \"purple\", alpha=.55) +\n  labs(x = \"Left vs. Right dimension\\n(party ID, symbolic ideology, and party thermometer ratings)\",\n       y = \"Anti-establishment thinking\", title = \"Conspiracy, populist, and Manichean orientations\\nare orthogonal to the standard partisan divide\", caption = \"Data: Uscinski et al. (AJPS, 2021).\") +\n  theme_minimal()"
  },
  {
    "objectID": "3_standard-charts.html#conspiratorial-orientation-and-pid",
    "href": "3_standard-charts.html#conspiratorial-orientation-and-pid",
    "title": "4  Standard charts",
    "section": "4.4 Conspiratorial orientation and PID",
    "text": "4.4 Conspiratorial orientation and PID\nIn principle, a box plot might make sense in this context…\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) +\n  theme_minimal() \n\n\n\n\nYou could simultaneously display all respondets (jittered):\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) +\n  geom_jitter(color=\"purple\",alpha=.4,width = .1) +\n  theme_minimal() \n\n\n\n\nMake small edits:\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) + \n  geom_jitter(color=\"purple\",alpha=.4,width = .1) + theme_minimal() +\n  labs(y=\"Conspiratorial thinking\\n(Average agreement with 4 questions)\",x = \"\")\n\n\n\n\n\n\n\n\nPerhaps even better:\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=consp_Index)) +\n  geom_boxplot(size=.4) + geom_jitter(color=\"purple\",alpha=.4,width = .1) + theme_minimal() +\n  labs(y=\"Conspiratorial thinking\\n(Average agreement with 4 questions)\",x = \"\",subtitle = \"Conspiratorial thinking is uncorrelated with partisanship\",\n       caption = \"Q1: Even though we live in a democracy, a few people will always run things anyway.\nQ2: The people who really run the country, are not known to the voters.\nQ3: Big events like wars, the recent recession, and the outcomes of elections are controlled\\nby small groups of people who are working in secret against the rest of us.\nQ4: Much of our lives are being controlled by plots hatched in secret places.\")"
  },
  {
    "objectID": "3_standard-charts.html#all-3-components-of-the-anti-est.-orienation",
    "href": "3_standard-charts.html#all-3-components-of-the-anti-est.-orienation",
    "title": "4  Standard charts",
    "section": "4.5 All 3 components of the anti-est. orienation",
    "text": "4.5 All 3 components of the anti-est. orienation\n\nd2 %&gt;% \n  ggplot(aes(x=as_factor(pid), y=suspicion2)) +\n  geom_boxplot(fill=\"purple\", alpha=.2) +\n  geom_jitter(alpha=.2,width = .11,color=\"purple4\") +\n  theme_minimal() +\n  labs(y=\"Conspiratorial thinking + Populism + Manichean outlook\",x = \"\")"
  },
  {
    "objectID": "3_standard-charts.html#narcissism-as-a-correlate-for-conspiracy-thinking",
    "href": "3_standard-charts.html#narcissism-as-a-correlate-for-conspiracy-thinking",
    "title": "4  Standard charts",
    "section": "4.6 Narcissism as a correlate for conspiracy thinking?",
    "text": "4.6 Narcissism as a correlate for conspiracy thinking?\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges()\n\n\n\n\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges(\n    fill = \"#00AFBB\",\n    quantile_lines = TRUE, quantiles = 2,alpha = .9,color = \"white\") +\n  labs(y= \"I tend to want others to admire me\",x=\"Conspiracy thinking\")\n\n\n\n\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges(\n    fill = \"#00AFBB\",\n    quantile_lines = TRUE, quantiles = 2,alpha = .9,color = \"white\") +\n    xlim(0,1) + labs(y= \"I tend to want others to admire me\",x=\"Conspiracy thinking\")\n\n\n\n\n\nd1 %&gt;% filter(!is.na(attent1)) %&gt;%\n  ggplot(aes(y = as_factor(attent1), x= suspicion2)) +\n  geom_density_ridges(\n    fill = \"#00AFBB\",\n    quantile_lines = TRUE, quantiles = 2,alpha = .9,color = \"white\") +\n  xlim(0,1) + labs(y= \"I tend to want others to admire me\",\n       x = \"The horizontal dimension measures how strongly respondents exhibit 3 traits:\n1. Conspiratorial thinking (e.g. \\\"Our lives are controlled by secret plots\\\")\n2. Populist beliefs\n3. Manichean political views\",caption = \"Data: Uscinski et al. (AJPS, 2021).\")\n\n\n\n\n\nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=suspicion2)) +\n  geom_smooth() + labs(x = \"Narcissism\", y=\"Anti-establishment orientation\") \n\n\n\n\n\nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=suspicion2)) +\n  geom_smooth() + labs(x = \"Narcissism\", y=\"Anti-establishment orientation\") +\n  ggside::geom_xsidehistogram() +\n  ggside::ggside(x.pos = \"bottom\")"
  },
  {
    "objectID": "3_standard-charts.html#mainstream-news",
    "href": "3_standard-charts.html#mainstream-news",
    "title": "4  Standard charts",
    "section": "4.7 Mainstream news",
    "text": "4.7 Mainstream news\n\nggpubr::ggarrange(\n  d1 %&gt;%\n  ggplot(aes(x=suspicion2,y=msm)) +\n  geom_smooth() +\n  labs(x = \"Anti-establihment orientation\", y=\"Much of the mainstream news is deliberately slanted to mislead us\") +\n  ggside::geom_xsidehistogram() +\n  ggside::ggside(x.pos = \"bottom\") ,\n  \nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=msm)) +\n  geom_smooth() +\n  labs(x = \"Narcissism\", y=\"Much of the mainstream news is deliberately slanted to mislead us\") +\n  ggside::geom_xsidehistogram() +\n  ggside::ggside(x.pos = \"bottom\") \n)\n\n\n\n\n\n\n\ncollmod &lt;- lm(msm ~ clintonft*suspicion2, data=d1)\nggeffects::ggeffect(collmod, terms=c(\"suspicion2\",\"clintonft\")) %&gt;% plot() +\n  labs(color=\"Rating of Hillary Clinton\",y=\"Much of the mainstream news is deliberately slanted to mislead us\",\n       x=\"Anti-establishment orientation\",title=\"\")\n\n\n\n\n“I often disagree with conventional views about the world”\n\nggpubr::ggarrange(\nd1 %&gt;%\n  ggplot(aes(x=suspicion2,y=conwis)) +\n  geom_smooth() +\n  labs(x = \"Anti-establihment orientation\", y=\"I often disagree with conventional views about the world\") +\n  ylim(c(1,5)),\nd1 %&gt;%\n  ggplot(aes(x=narcissism,y=conwis)) +\n  geom_smooth() +\n  labs(x = \"Narcissism\", y=\"I often disagree with conventional views about the world\") +\n  ylim(c(1,5))\n)"
  },
  {
    "objectID": "3_standard-charts.html#denial-of-climate-change",
    "href": "3_standard-charts.html#denial-of-climate-change",
    "title": "4  Standard charts",
    "section": "4.8 Denial of climate change",
    "text": "4.8 Denial of climate change\n\ntable(d2$climatechange)\n\n\n  1   2   3   4   5 \n733 454 395 233 206 \n\n\n\ntable(d2$climatechangeBIN)\n\n\n   0    1 \n1582  439 \n\n\n\nd2 %&gt;% count(climatechangeBIN)\n\n# A tibble: 3 × 2\n  climatechangeBIN     n\n             &lt;dbl&gt; &lt;int&gt;\n1                0  1582\n2                1   439\n3               NA     2\n\n\nAre the missing observations the same for the original and the recoded variable? (If not, we would want to check whether earlier code did something unintended.)\n\nd2 %&gt;% count(climatechangeBIN,climatechange)\n\n# A tibble: 6 × 3\n  climatechangeBIN climatechange     n\n             &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n1                0             1   733\n2                0             2   454\n3                0             3   395\n4                1             4   233\n5                1             5   206\n6               NA            NA     2"
  },
  {
    "objectID": "4_advanced-ggplot.html",
    "href": "4_advanced-ggplot.html",
    "title": "5  Advanced ggplot",
    "section": "",
    "text": "library(tidyverse)\nsource(\"data_AJPS2021/0_ajps_recode.R\")\n\nGrab a subset of variables (i.e. psychological measurements), and show the distribution of conspiracy thinking when respondents report a particular trait:\n\nx &lt;- c(\"argue1\", \"argue2\", \"argue3\", \"manip1\", \"manip2\", \"manip3\", \"manip4\", \n       \"attent1\", \"attent2\", \"attent3\", \"attent4\",\n       \"insens1\",\"insens2\",\"insens3\",\"insens4\")\n\n#d1$nondark &lt;- ifelse(d1$insens3 &lt;=2 & d1$manip4 &lt;=2 & d1$insens1&lt;=2, 1,0)\nd1$nondark &lt;- ifelse(d1$manipulate2 &lt;=.2 & d1$sociopathy2 &lt;= .2 & d1$attend2 &lt;=.2, 1,0)\n\n\n\n\n\n\nThe most important step is the following:\n\nd1 %&gt;% select(consp_Index2,\n              nondark,\n              all_of(x)) %&gt;% \n  pivot_longer(cols = -consp_Index2)\n\n# A tibble: 32,000 × 3\n   consp_Index2 name    value             \n          &lt;dbl&gt; &lt;chr&gt;   &lt;dbl+lbl&gt;         \n 1        0.938 nondark 0                 \n 2        0.938 argue1  3 [Neither]       \n 3        0.938 argue2  4 [Agree]         \n 4        0.938 argue3  4 [Agree]         \n 5        0.938 manip1  5 [Strongly agree]\n 6        0.938 manip2  5 [Strongly agree]\n 7        0.938 manip3  5 [Strongly agree]\n 8        0.938 manip4  5 [Strongly agree]\n 9        0.938 attent1 4 [Agree]         \n10        0.938 attent2 3 [Neither]       \n# ℹ 31,990 more rows\n\n\nAnd the full plot can be generated with the following code:\n\nd1 %&gt;% select(consp_Index2,\n              nondark,\n              all_of(x)) %&gt;% \n  pivot_longer(cols = -consp_Index2) %&gt;%\n  mutate(name2 = case_when(\n    name == \"argue1\" ~  \"I like to argue online with other people\",\n    name == \"argue2\" ~  \"I enjoy a good argument over a controversial issue\",\n    name == \"argue3\" ~  \"I am willing to express my opinion online\\neven if others strongly disagree with me\",\n    name == \"manip1\" ~  \"I tend to manipulate others to get my way\",\n    name == \"manip2\" ~  \"I have used deceit or lied to get my way\",\n    name == \"manip3\" ~  \"I have used flattery to get my way\",\n    name == \"manip4\" ~  \"I tend to exploit others towards my own end\",\n    name == \"attent1\" ~  \"I tend to want others to admire me\",\n    name == \"attent2\" ~  \"I tend to want others to pay attention to me\",\n    name == \"attent3\" ~  \"I tend to seek prestige or status\",\n    name == \"attent4\" ~  \"I tend to expect special favors from others\",\n    name == \"insens1\" ~ \"I tend to lack remorse\",\n    name == \"insens2\" ~ \"I tend to be unconcerned with the morality\\nof my actions\",\n    name == \"insens3\" ~ \"I tend to be callous or insensitive\",\n    name == \"insens4\" ~ \"I tend to be cynical\",\n    name == \"nondark\" ~ \"Low on narcissism, mach., and sociopathy\"\n  ),\n  concept = case_when(\n    name %in% c(\"argue1\",\"argue2\",\"argue3\") ~ \"Argumentativeness\",\n    name %in% c(\"manip1\", \"manip2\", \"manip3\", \"manip4\") ~ \"Machiavellianism\",\n    name %in% c(\"attent1\", \"attent2\", \"attent3\", \"attent4\") ~ \"Narcissism\",\n    name %in% c(\"insens1\",\"insens2\",\"insens3\",\"insens4\") ~ \"Sociopathy\",\n    name %in% c(\"nondark\") ~ \"Non-dark\"\n  )) %&gt;%\n  filter(!is.na(value) & !is.na(consp_Index2)) %&gt;%\n  mutate(agree = ifelse(value&gt;=5,1,0)) %&gt;% \n  group_by(name) %&gt;% mutate(avg_agree = mean(agree)) %&gt;%\n  group_by(name,agree) %&gt;% mutate(avg_cons = mean(consp_Index2)) %&gt;%\n  ungroup() %&gt;%\n  filter(agree==1 | (name==\"nondark\" & value==1)) %&gt;%\n  ggplot(aes(x=consp_Index2,y=fct_reorder(name2,avg_cons),\n             fill=concept)) +\n  ggridges::geom_density_ridges() +\n  theme_bw()  +\n  theme(legend.position = \"right\") +\n  labs(x=\"Conspiracy thinking\",y=\"\",color=\"\",fill=\"Concept\",\n       title = \"Distribution of conspiracy thinking\\nbroken down by responses to psychological questions\\nand color-coded by trait (dark triad + argumentativeness)\") +\n  #scale_fill_manual(values=Prism5) +\n  see::scale_fill_social() +\n  scale_x_continuous(limits = c(0,1))\n\n\n[See the lecture notes on the course website for additional code]"
  },
  {
    "objectID": "4b_tweet_ratings.html#structure-of-the-dataset",
    "href": "4b_tweet_ratings.html#structure-of-the-dataset",
    "title": "6  Mixed data (strings and numbers)",
    "section": "6.1 Structure of the dataset",
    "text": "6.1 Structure of the dataset\n\nThe underlying data consists of tweets\nSo we could do text analysis\nWe will mostly focus here on visualizing numerical ratings\n(But each word can of course be considered a variable!)\n\nWhat you will be able to practice here:\n\nLoading JSON data into R\nCalculating summary statistics (means, proportions)\nTransforming data (wide to long)\nVisualizing distributions and comparisons using ggplot2\nHighlighting specific observations in plots\n\n\n6.1.1 Loading Libraries and Data\nFirst, we load the necessary libraries. jsonlite lets us read JSON data directly from a URL, and tidyverse provides a suite of data manipulation and visualization tools.\n\nlibrary(jsonlite)\nlibrary(tidyverse)\n\n# Load the YouGov tweet sentiment data from GitHub\nyg &lt;- fromJSON(\"https://github.com/kennyjoseph/trump_tweets_icwsm/raw/master/data/all_yougov_tweetdata_updated.json\")\n\nCheck what we have imported:\n\nnames(yg)\n\n[1] \"text\"             \"group\"            \"data\"             \"created_at\"      \n[5] \"survey_date\"      \"objectID\"         \"_highlightResult\"\n\n# View first 5 tweet texts\nyg$text[1:5]\n\n[1] \"Great honor to be headed to the Army-Navy game today. Will be there shortly, landing now! https://t.co/ByAfESq8aS\"                                                                                                                                                                       \n[2] \"....left and right, he then woke up from his dream screaming that HE LIED. Next time I go to Vietnam I will ask 'the Dick' to travel with me!\"                                                                                                                                           \n[3] \"Watched Da Nang Dick Blumenthal on television spewing facts almost as accurate as his bravery in Vietnam (which he never saw). As the bullets whizzed by Da Nang Dicks head, as he was saving soldiers....\"                                                                              \n[4] \"Very sad day & night in Paris. Maybe it's time to end the ridiculous and extremely expensive Paris Agreement and return money back to the people in the form of lower taxes? The U.S. was way ahead of the curve on that and the only major country where emissions went down last year!\"\n[5] \"'This is collusion illusion, there is no smoking gun here. At this late date, after all that we have gone through, after millions have been spent, we have no Russian Collusion. There is nothing impeachable here.' @GeraldoRivera Time for the Witch Hunt to END!\"                     \n\n# Peek at the nested data frame\nyg$data %&gt;% tibble() %&gt;% head()\n\n# A tibble: 6 × 4\n  All$score $base $data     Democrat$score Republican$score Independent$score\n      &lt;dbl&gt; &lt;int&gt; &lt;list&gt;             &lt;dbl&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n1      20.6  1000 &lt;dbl [5]&gt;          -38.2            104.              37.3 \n2     -58.3  1000 &lt;dbl [5]&gt;         -140.              45.1            -48.0 \n3     -58.3  1000 &lt;dbl [5]&gt;         -140.              45.1            -48.0 \n4     -26.7  1000 &lt;dbl [5]&gt;         -123.              92.1             -3.53\n5     -34.8  1000 &lt;dbl [5]&gt;         -133.              99.1            -22.8 \n6      13.5  1000 &lt;dbl [5]&gt;          -54.3            110.              29.5 \n# ℹ 6 more variables: Democrat$base &lt;int&gt;, $data &lt;list&gt;, Republican$base &lt;int&gt;,\n#   $data &lt;list&gt;, Independent$base &lt;int&gt;, $data &lt;list&gt;\n\n\n\n\n6.1.2 Creating a Tidy Data Frame\nWe now construct a tidy tibble that includes:\n\ntext: the tweet content\nscore: overall sentiment score\nscore_dems: average rating by Democrats\nscore_reps: average rating by Republicans\n\n\ndata &lt;- tibble(\n  text = yg$text,\n  score = yg$data$All$score,\n  score_dems = yg$data$Democrat$score,\n  score_reps = yg$data$Republican$score\n)\n\n# Display the first few rows\ndata\n\n# A tibble: 4,404 × 4\n   text                                              score score_dems score_reps\n   &lt;chr&gt;                                             &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 Great honor to be headed to the Army-Navy game t…  20.6      -38.2      104. \n 2 ....left and right, he then woke up from his dre… -58.3     -140.        45.1\n 3 Watched Da Nang Dick Blumenthal on television sp… -58.3     -140.        45.1\n 4 Very sad day & night in Paris. Maybe it's time t… -26.7     -123.        92.1\n 5 'This is collusion illusion, there is no smoking… -34.8     -133.        99.1\n 6 ....I am thankful to both of these incredible me…  13.5      -54.3      110. \n 7 I am pleased to announce my nomination of four-s…  13.5      -54.3      110. \n 8 AFTER TWO YEARS AND MILLIONS OF PAGES OF DOCUMEN… -39.6     -136.        78.2\n 9 The idea of a European Military didn't work out … -18.2     -109.        87.2\n10 The Paris Agreement isn't working out so well fo… -42.2     -131.        69.6\n# ℹ 4,394 more rows\n\n\n\n\n6.1.3 Summary Statistics by Party\nCheck for missing values:\n\nany(is.na(data$score_dems))  # Were there any missing Democrat ratings?\n\n[1] FALSE\n\nany(is.na(data$score_reps))  # Were there any missing Republican ratings?\n\n[1] FALSE\n\n\nCalculate the average rating among Democrats and Republicans:\n\nmean_dems &lt;- data$score_dems %&gt;% mean(na.rm = TRUE)\nmean_reps &lt;- data$score_reps %&gt;% mean(na.rm = TRUE)\n\nmean_dems  # Average rating by Democrats\n\n[1] -93.17322\n\nmean_reps  # Average rating by Republicans\n\n[1] 100.5169\n\n\n\n\n6.1.4 A quick look at the data\n\nWhat were the most popular tweets?\nWhat is the range of the data?\n\n\n# Arrange tweets by descending and ascending overall score\n# Note this will not influence the original data, or subsequent plots\ndata %&gt;% arrange(score) %&gt;% head()\n\n# A tibble: 6 × 4\n  text                                               score score_dems score_reps\n  &lt;chr&gt;                                              &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 I know Mark Cuban well. He backed me big-time but… -81.4      -134.     -18.0 \n2 I heard poorly rated @Morning_Joe speaks badly of… -77.5      -143.       6.39\n3 ...to Mar-a-Lago 3 nights in a row around New Yea… -77.5      -143.       6.39\n4 Crazy Joe Scarborough and dumb as a rock Mika are… -76.7      -150.      27.7 \n5 Lebron James was just interviewed by the dumbest … -72.3      -168.      45.8 \n6 Just watched Wacky Tom Steyer, who I have not see… -71.7      -148.      45.9 \n\n\n\ndata %&gt;% \n summarize(lowest = min(score),highest=max(score))\n\n# A tibble: 1 × 2\n  lowest highest\n   &lt;dbl&gt;   &lt;dbl&gt;\n1  -81.4    82.9\n\n\n\n\n6.1.5 Exploring Overall Sentiment Distribution\n\n# Histogram of overall sentiment scores\ndata %&gt;%\n  ggplot(aes(x = score)) +\n  geom_histogram(bins = 35, fill = \"yellow3\", color = \"black\") +\n  theme_bw() +\n  labs(title = \"Distribution of Overall Sentiment Scores\", x = \"Sentiment Score\", y = \"Count\")\n\n\n\n\nOr consider running:\n\n# Density plot of overall scores\ndata %&gt;%\n  ggplot(aes(x = score)) +\n  geom_density() +\n  theme_bw() +\n  labs(title = \"Density of Overall Sentiment Scores\", x = \"Sentiment Score\", y = \"Density\")\n\n\n\n\n\n\n6.1.6 Breaking down the data by group\nCompute and compare mean ratings by party\nWhat should the structure of the input be?\n\ndata %&gt;%\n  summarize(\n    Democrats = mean(score_dems, na.rm = TRUE),\n    Republicans = mean(score_reps, na.rm = TRUE)\n  ) \n\n# A tibble: 1 × 2\n  Democrats Republicans\n      &lt;dbl&gt;       &lt;dbl&gt;\n1     -93.2        101.\n\n\nCompute and compare mean ratings by party\nWhat should the structure of the input be?\nBetter to stack the data (go from wide to long)\n\ndata %&gt;%\n  summarize(\n    Democrats = mean(score_dems, na.rm = TRUE),\n    Republicans = mean(score_reps, na.rm = TRUE)\n  ) %&gt;% pivot_longer(cols = everything(), \n                 names_to = \"party\", \n                 values_to = \"mean_score\")\n\n# A tibble: 2 × 2\n  party       mean_score\n  &lt;chr&gt;            &lt;dbl&gt;\n1 Democrats        -93.2\n2 Republicans      101. \n\n\n\n\n6.1.7 Preparing a simple bar plot\n\ndata %&gt;%\n  summarize(\n    Democrats = mean(score_dems, na.rm = TRUE),\n    Republicans = mean(score_reps, na.rm = TRUE)\n  ) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"party\", values_to = \"mean_score\") %&gt;%\n  ggplot(aes(x = party, y = mean_score)) +\n  geom_col(aes(fill = party), width = 0.3) +\n  geom_hline(yintercept = 0, color = \"black\") +\n  scale_fill_manual(values = c(\"Democrats\" = \"blue3\", \"Republicans\" = \"red3\")) +\n  theme_bw(base_size = 12) +\n  labs(\n    x = \"Party\",\n    y = \"Mean Sentiment Score\",\n    title = \"Mean Sentiment Score by Party (All Tweets)\",\n    fill = \"Party\"\n  )\n\n\n\n6.1.8 Breaking down the data by group\n\n\n\n\n\n\n\n6.1.9 Scatterplot of Party Ratings Against Each Other\nPlot Democrat ratings (score_dems) against Republican ratings (score_reps) to see whether respondents tend to agree (in spite of an anticipate “intercept shift”)\n\nfig_layer &lt;- data %&gt;%\n  ggplot(aes(x = score_reps, y = score_dems))\n\nfig_layer + \n geom_point()\n\n\n\n\n\n\n6.1.10 Ratings by party\nAnother way to show the correlation\n\nfig_layer +\n  geom_smooth(method = \"lm\") +\n  theme_bw() +\n  labs(\n    title = \"Relationship Between Republican and Democrat Ratings\",\n    x = \"Republican Rating\",\n    y = \"Democrat Rating\"\n  )\n\n\n\n\n\n\n6.1.11 Comparing Distributions of Ratings\nReshape the full data for plotting density curves of each rating type:\n\n( long_data &lt;- data %&gt;%\n  pivot_longer(\n    cols = c(score, score_dems, score_reps),\n    names_to = \"party\",\n    values_to = \"score\"\n  ) )\n\n# A tibble: 13,212 × 3\n   text                                                             party  score\n   &lt;chr&gt;                                                            &lt;chr&gt;  &lt;dbl&gt;\n 1 Great honor to be headed to the Army-Navy game today. Will be t… score   20.6\n 2 Great honor to be headed to the Army-Navy game today. Will be t… scor…  -38.2\n 3 Great honor to be headed to the Army-Navy game today. Will be t… scor…  104. \n 4 ....left and right, he then woke up from his dream screaming th… score  -58.3\n 5 ....left and right, he then woke up from his dream screaming th… scor… -140. \n 6 ....left and right, he then woke up from his dream screaming th… scor…   45.1\n 7 Watched Da Nang Dick Blumenthal on television spewing facts alm… score  -58.3\n 8 Watched Da Nang Dick Blumenthal on television spewing facts alm… scor… -140. \n 9 Watched Da Nang Dick Blumenthal on television spewing facts alm… scor…   45.1\n10 Very sad day & night in Paris. Maybe it's time to end the ridic… score  -26.7\n# ℹ 13,202 more rows\n\n\n\nlong_data %&gt;%\n  ggplot(aes(y = party, x = score)) +\n  geom_point(alpha = .1) + labs(x=\"Tweet ratings\",y=\"\")\n\n\n\n\n\nlong_data %&gt;%\n  ggplot(aes(y = party, x = score)) +\n  geom_jitter(alpha = .1) + labs(x=\"Tweet ratings\",y=\"\")\n\n\n\n\n\nlong_data %&gt;%\n  ggplot(aes(y = party, x = score)) +\n  geom_jitter(alpha = .05,height = .2) + labs(x=\"Tweet ratings\",y=\"\")\n\n\n\n\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Democrats\",\n    party == \"score_reps\" ~ \"Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score)) +\n  geom_jitter(alpha = .05,height = .2) + labs(x=\"Tweet ratings\",y=\"\")\n\n\n\n\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, color = Party)) +\n  geom_jitter(alpha = .065,height = .2, show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n scale_color_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal()"
  },
  {
    "objectID": "4b_tweet_ratings.html#other-ways-to-show-distributions-of-numerical-variables",
    "href": "4b_tweet_ratings.html#other-ways-to-show-distributions-of-numerical-variables",
    "title": "6  Mixed data (strings and numbers)",
    "section": "6.2 Other ways to show distributions of numerical variables",
    "text": "6.2 Other ways to show distributions of numerical variables\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party)) +\n  geom_boxplot() +\n scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party)) +\n  geom_boxplot(show.legend = FALSE) +\n scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\nYou can also add a jitter layer to the boxplot to show individual data points:\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party)) +\n geom_jitter(alpha = .065,height = .2, show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n  geom_boxplot(show.legend = FALSE) +\n scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\nAdjust the boxplot transparency:\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party)) +\n geom_jitter(alpha = .065,height = .2, show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n  geom_boxplot(show.legend = FALSE,alpha=.6) +\n scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\nMake the points more subtle\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party)) +\n geom_jitter(alpha = .045,height = .1, size=.25,show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n  geom_boxplot(show.legend = FALSE,alpha=.6) +\n scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\nMake the boxes narrower and the border thinner:\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party)) +\n geom_jitter(alpha = .045,height = .1, size=.25,show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n  geom_boxplot(alpha=.75,size=.2,width=.3,show.legend = FALSE,) +\n scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\nAdjust the dot colors as well:\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",\n    party == \"score_reps\" ~ \"Among Republicans\",\n    TRUE ~ \"Overall\") ) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party, color = Party)) +\n geom_jitter(alpha = .045,height = .1, size=.25,show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n  geom_boxplot(alpha=.75,size=.2,width=.3,show.legend = FALSE,) +\n scale_color_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() \n\n\n\n\nMake final adjustments:\n\nlong_data %&gt;%\n mutate(Party = case_when(\n    party == \"score_dems\" ~ \"Among Democrats\",party == \"score_reps\" ~ \"Among Republicans\",TRUE ~ \"Overall\"), Party = factor(Party,levels = c(\"Among Republicans\",\"Overall\",\"Among Democrats\"))) %&gt;%\n  ggplot(aes(y = Party, x = score, fill = Party, color = Party)) +\n geom_jitter(alpha = .045,height = .1, size=.25,show.legend = F) + labs(x=\"Tweet ratings\",y=\"\") +\n  geom_boxplot(outliers=F,alpha=.75,size=.2,width=.3,show.legend = FALSE,) +\n scale_color_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + scale_fill_manual(values = c(\"Among Democrats\" = \"steelblue\", \"Among Republicans\" = \"red4\", \"score\"= \"Overall\")) + theme_minimal() + ggtitle(\"Ratings of Trump tweets among YouGov respondents\")"
  },
  {
    "objectID": "4b_tweet_ratings.html#still-more-ways-to-show-distributions",
    "href": "4b_tweet_ratings.html#still-more-ways-to-show-distributions",
    "title": "6  Mixed data (strings and numbers)",
    "section": "6.3 Still more ways to show distributions",
    "text": "6.3 Still more ways to show distributions\n\nlong_data %&gt;%\n  ggplot(aes(x = score, color = party)) +\n  geom_density() +\n  theme_bw() + labs(title = \"Density of Scores by Rating Type\", x = \"Score\", y = \"Density\")\n\n\n\n\n\nlong_data %&gt;%\n  ggplot(aes(x = score, fill = party)) +\n  geom_density(alpha = 0.6, show.legend = TRUE) +\n  scale_fill_manual(\n    values = c(\"score_dems\" = \"steelblue\", \"score_reps\" = \"red4\", \"score\" = \"grey\")\n  ) +\n  theme_bw(base_size = 12) +\n  labs(title = \"Overlayed Density of Scores\", x = \"Score\", y = \"Density\", fill = \"Rating Type\")\n\n\n\n\n\nlong_data %&gt;%\n  ggplot(aes(x = score, fill = party)) +\n  geom_histogram(alpha = 0.5, color = \"black\", bins = 30) +\n  scale_fill_brewer(palette = \"Set1\", direction = -1) +\n  theme_bw() +\n  labs(title = \"Histogram of Scores by by Party ID\", x = \"Score\", y = \"Count\", fill = \"Rating Type\")"
  },
  {
    "objectID": "4b_tweet_ratings.html#content-classification",
    "href": "4b_tweet_ratings.html#content-classification",
    "title": "6  Mixed data (strings and numbers)",
    "section": "6.4 Content classification",
    "text": "6.4 Content classification\n\n6.4.1 Identifying Tweets that Mention Obama\nWe create a binary indicator obama which is 1 if the tweet text contains the word “Obama”, otherwise 0. Then we can compute how often tweets mention Obama.\n\n# Create indicator for \"Obama\"\ndata$obama &lt;- ifelse(str_detect(data$text, \"Obama\"), 1, 0)\n\n# Frequency of Obama mentions\ntable(data$obama)\n\n\n   0    1 \n4216  188 \n\n# Percentage of tweets that mention Obama\nprop_obama &lt;- data$obama %&gt;% mean()\nprop_obama\n\n[1] 0.04268847\n\n\n\n\n6.4.2 Comparing Ratings for Obama-Mentioning Tweets\nCompute mean sentiment ratings by Democrats and Republicans for tweets that mention Obama:\n\ndata %&gt;%\n  filter(obama == 1) %&gt;%\n  summarize(\n    mean_dems = mean(score_dems, na.rm = TRUE),\n    mean_reps = mean(score_reps, na.rm = TRUE)\n  )\n\n# A tibble: 1 × 2\n  mean_dems mean_reps\n      &lt;dbl&gt;     &lt;dbl&gt;\n1     -127.      90.8\n\n\n\n\n6.4.3 Comparing Ratings for Obama-Mentioning Tweets\nNext, compare average ratings between tweets that do and do not mention Obama:\n\ndata %&gt;%\n  group_by(obama) %&gt;%\n  summarize(\n    mean_dems = mean(score_dems, na.rm = TRUE),\n    mean_reps = mean(score_reps, na.rm = TRUE)\n  )\n\n# A tibble: 2 × 3\n  obama mean_dems mean_reps\n  &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1     0     -91.6     101. \n2     1    -127.       90.8\n\n\nMake a nicer table with descriptive labels and rounded values:\n\ntab &lt;- data %&gt;%\n  group_by(obama) %&gt;%\n  summarize(\n    mean_dems = mean(score_dems, na.rm = TRUE),\n    mean_reps = mean(score_reps, na.rm = TRUE)\n  ) %&gt;%\n  mutate(obama = ifelse(obama == 1, \"Obama Mentioned\", \"Obama Not Mentioned\")) %&gt;%\n  rename(\n    \"Tweet type\" = obama,\n    \"Avg. rating among Democrats\" = mean_dems,\n    \"Avg. rating among Republicans\" = mean_reps\n  )\n\n# Display the table\n(tab %&gt;% knitr::kable(digits = 1))\n\n\n\n\n\n\n\n\n\nTweet type\nAvg. rating among Democrats\nAvg. rating among Republicans\n\n\n\n\nObama Not Mentioned\n-91.6\n100.9\n\n\nObama Mentioned\n-127.4\n90.8\n\n\n\n\n\n\n\n6.4.4 Highlighting Obama-Mention Tweets in Scatterplot\nIdentify tweets that mention Obama in the scatter of party ratings:\n\ndata %&gt;%\n  ggplot(aes(x = score_reps, y = score_dems)) +\n  geom_point(aes(color = factor(obama)), size = 0.4) +\n  scale_color_manual(values = c(\"0\" = \"grey60\", \"1\" = \"orange\")) +\n  theme_bw(base_size = 12) + labs(title = \"Party Ratings with Obama-Mention Tweets Highlighted\",x = \"Republican Rating\",y = \"Democrat Rating\",color = \"Obama Mentioned\")\n\n\n\n\n\n\n6.4.5 Highlighting Obama-Mention Tweets in Scatterplot\nIf desired, use gghighlight to emphasize only the Obama-mentioning tweets:\n\nlibrary(gghighlight)\ndata %&gt;%\n  ggplot(aes(x = score_reps, y = score_dems)) +\n  geom_point(aes(color = obama), size = 0.4,show.legend=F) +\n  gghighlight(obama == 1) + theme_bw(base_size = 12) + labs(subtitle = \"Highlighted tweets mention Barack Obama\", color = \"Obama Mention\")"
  },
  {
    "objectID": "4b_tweet_ratings.html#showing-the-full-text-of-tweets",
    "href": "4b_tweet_ratings.html#showing-the-full-text-of-tweets",
    "title": "6  Mixed data (strings and numbers)",
    "section": "6.5 Showing the full text of tweets",
    "text": "6.5 Showing the full text of tweets\n\n6.5.1 Pulling Out Specific Tweets\n\nWe can hand-pick some observations and display the full text of the tweets which were rated\nFor example, here select tweets from rows 19 through 23 and display their texts along with their ratings:\n\n\ndata[19:22, ] %&gt;%\n  ggplot(aes(y = text)) +\n  geom_point(aes(x = score_dems), color = \"blue3\") +\n  geom_point(aes(x = score_reps), color = \"red3\") +\n  scale_y_discrete(labels = scales::label_wrap(50)) +\n  labs(x = \"Rating\", title = \"Ratings of Selected Tweets\")\n\n\n\n\n\n\n\ndata[60:63, ] %&gt;%\n  ggplot(aes(y = text)) +\n  geom_col(aes(x = score_dems), fill = \"blue3\",width=.5) +\n  geom_col(aes(x = score_reps), fill = \"red3\",width=.5) +\n  scale_y_discrete(labels = scales::label_wrap(50)) +\n  labs(x = \"Rating\", title = \"Ratings of Selected Tweets\",y=\"\")\n\n\n\n\n\n\n\n\n6.5.2 Finding unusual / surprising observations\nLet’s see if there are tweets mentioning Obama with POSITIVE Democrat ratings\n\n# Extract tweets mentioning Obama with positive Democrat ratings\ndata %&gt;%\n  filter(obama == 1, score_dems &gt;= 0) %&gt;% nrow()\n\n[1] 1\n\n\nSo, there was one such tweet! What did it say?\n\n# Extract tweets mentioning Obama with positive Democrat ratings\ndata %&gt;%\n  filter(obama == 1, score_dems &gt;= 0) %&gt;% pull(text)\n\n[1] \"I agree with President Obama 100%! https://t.co/PI3aW1Zh5Q\""
  },
  {
    "objectID": "4b_tweet_ratings.html#conclusion",
    "href": "4b_tweet_ratings.html#conclusion",
    "title": "6  Mixed data (strings and numbers)",
    "section": "6.6 Conclusion",
    "text": "6.6 Conclusion\nStudents should now be able to:\n\nLoad JSON data into R and inspect its structure\nCalculate and interpret summary statistics by group\nCreate and format tables in markdown\nReshape data between wide and long formats\nVisualize distributions and relationships with ggplot2\nHighlight specific observations in visualizations\n\nFeel free to modify the code and experiment with different subsets or additional variable transformations."
  },
  {
    "objectID": "5_visualizing-models.html#nationscape-data",
    "href": "5_visualizing-models.html#nationscape-data",
    "title": "7  Visualizing statistical models",
    "section": "7.1 Nationscape data",
    "text": "7.1 Nationscape data\n\n# Read in Nationscape survey data:\nlibrary(tidyverse)\nlibrary(labelled)\na &lt;- readRDS(\"data_nationscape2019/Nationscape_first10waves.rds\")\n\n\n7.1.1 Association between sexism and AOC favorability over time\nWe estimate 10 separate model, aka “rolling regressions”.\nWe run one model for each value of week, and create a tibble thanks to the tidy()function:\n\na %&gt;% filter(\n         !is.na(aoc_Favorable),\n         !is.na(gender_att3_by1SD)) %&gt;%\n  group_by(week) %&gt;%\n  do(broom::tidy(lm(aoc_Favorable ~\n               gender_att3_by1SD +\n               age + college_grad +\n               White + Black + Hispanic, data = .))) %&gt;%\n    # Which coefficient we wish to pull:\n    filter(term == \"gender_att3_by1SD\") %&gt;%\n    ggplot(aes(x=week,y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error)) +\n  geom_pointrange(position = position_dodge(width = .45), size=.6) + labs(x=\"\",y=\"Coefficient estimate\",\n  color=\"Subset of respondents\") +\n  ggtitle(\"Association between sexism and AOC favorability\") +\n  geom_hline(yintercept=0, linetype=2) \n\n\n\n\nIt seems that the correlation between sexism and (lower) favorability of AOC is quite stable.\n\naoc_Favorable &lt;- a %&gt;% filter(\n         !is.na(aoc_Favorable),\n         !is.na(gender_att3_by1SD)) %&gt;%\n  group_by(pid3) %&gt;%\n  do(broom::tidy(lm(aoc_Favorable ~\n               gender_att3_by1SD +\n               age + college_grad +\n               White + Black + Hispanic, data = .)))\n\n\n\n7.1.2 Demographics\nWe can now plot any set of coefficients, of course.\nLet us try to see whether age correlates negatively with AOC’s favorability, as we might perhaps suspect:\n\naoc_Favorable %&gt;% filter(pid3 &lt;= 3 & term == \"age\") %&gt;%\n  ggplot(aes(x=as_factor(pid3),y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error,\n             shape = factor(pid3))) +\n  geom_pointrange() + labs(x=\"\",y=\"Coefficient estimate\",color=\"\")\n\n\n\n\nLet’s improve the design a little bit:\n\naoc_Favorable %&gt;% filter(pid3 &lt;= 3,term == \"age\") %&gt;%\n  ggplot(aes(x=as_factor(pid3),y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error,color=as_factor(pid3))) +\n  geom_pointrange(position = position_dodge(width = .45), size=.6) + labs(x=\"Model estimate among respondents who identified as a...\",y=\"Coefficient estimate\",\n  color=\"Subset of respondents\") +\n  ggtitle(\"Association between age and AOC favorability\") +\n  geom_hline(yintercept=0, linetype=2) \n\n\n\n\nNeed to fix the party colors:\n\naoc_Favorable %&gt;% filter(pid3 &lt;= 3,term == \"age\") %&gt;%\n  ggplot(aes(x=as_factor(pid3),y=estimate,\n             ymax = estimate + 1.96*std.error,\n             ymin = estimate - 1.96*std.error,color=as_factor(pid3))) +\n  geom_pointrange(position = position_dodge(width = .45), size=.6) + labs(x=\"Model estimate among respondents who identified as a...\",y=\"Coefficient estimate\",\n  color=\"Subset of respondents\") +\n  ggtitle(\"Association between age and AOC favorability\") +\n  geom_hline(yintercept=0, linetype=2) +\n  scale_color_manual(values = c(\"blue3\",\"darkred\",\"grey40\"))"
  },
  {
    "objectID": "5_visualizing-models.html#ajps-2021-data",
    "href": "5_visualizing-models.html#ajps-2021-data",
    "title": "7  Visualizing statistical models",
    "section": "7.2 AJPS (2021) data",
    "text": "7.2 AJPS (2021) data\n\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(labelled)\n\n# READ IN RECODED DATA\nsource(\"data_AJPS2021/0_ajps_recode.R\")\n\nWe now turn again to the dataset posted by Uscinski et al. (2021).\n\n# CT seems correlated with Trump FT among Dems\n# Pop seems correlated with Trump FT among Reps \n# Manich. correlated with Trump FT among all\n\nint1 &lt;- lm(cexaggerate ~ pid*pop_Index, data=d3)\nint2 &lt;- lm(trumpft ~ pid*pop_Index, data=d3)\nint3 &lt;- lm(trumpft ~ pid*consp_Index, data=d3)\nint4 &lt;- lm(trumpft ~ pid*goodevil + consp_Index + pop_Index, data=d3)\n\n\nggeffects::ggeffect(int1, terms=c(\"pid\",\"pop_Index\")) %&gt;% plot() +\n  labs(y=\"Climate change is exaggerated\",\n       x=\"PID (7=Strong Republican\",color=\"Populism\")"
  },
  {
    "objectID": "typology.html#bee-swarm-plots",
    "href": "typology.html#bee-swarm-plots",
    "title": "Typology of charts",
    "section": "Bee swarm plots",
    "text": "Bee swarm plots\n\nExample 2:\n\nSource: Annie Karni, Malika Khurana and Stuart A. Thompson. How Republicans Fed a Misinformation Loop About the Pelosi Attack."
  },
  {
    "objectID": "typology.html#grouped-bar-chart",
    "href": "typology.html#grouped-bar-chart",
    "title": "Typology of charts",
    "section": "Grouped bar chart",
    "text": "Grouped bar chart\n\nChart: @janzilinsky; Data: Thermometer ratings from VOTER Survey."
  },
  {
    "objectID": "typology.html#density-plot",
    "href": "typology.html#density-plot",
    "title": "Typology of charts",
    "section": "Density plot",
    "text": "Density plot\n\nSource: Eady et al. (2019)"
  },
  {
    "objectID": "typology.html#joyplot-or-ridgeplot",
    "href": "typology.html#joyplot-or-ridgeplot",
    "title": "Typology of charts",
    "section": "Joyplot or ridgeplot",
    "text": "Joyplot or ridgeplot\n\nSource: Eady et al. (2019)"
  },
  {
    "objectID": "typology.html#heatmap",
    "href": "typology.html#heatmap",
    "title": "Typology of charts",
    "section": "Heatmap",
    "text": "Heatmap\nHere the cell entries of the number of cases per 100,000 people.\n\nSource: http://graphics.wsj.com/infectious-diseases-and-vaccines/"
  },
  {
    "objectID": "typology.html#maps",
    "href": "typology.html#maps",
    "title": "Typology of charts",
    "section": "Maps",
    "text": "Maps"
  },
  {
    "objectID": "typology.html#histograms",
    "href": "typology.html#histograms",
    "title": "Typology of charts",
    "section": "Histograms",
    "text": "Histograms"
  },
  {
    "objectID": "typology.html#maps-with-2-dimensional-color-coding",
    "href": "typology.html#maps-with-2-dimensional-color-coding",
    "title": "Typology of charts",
    "section": "Maps with 2-dimensional color-coding:",
    "text": "Maps with 2-dimensional color-coding:"
  },
  {
    "objectID": "typology.html#cartogram",
    "href": "typology.html#cartogram",
    "title": "Typology of charts",
    "section": "Cartogram",
    "text": "Cartogram"
  },
  {
    "objectID": "typology.html#cartogram-or-a-heatmap",
    "href": "typology.html#cartogram-or-a-heatmap",
    "title": "Typology of charts",
    "section": "Cartogram or a heatmap?",
    "text": "Cartogram or a heatmap?"
  },
  {
    "objectID": "typology.html#boxplots",
    "href": "typology.html#boxplots",
    "title": "Typology of charts",
    "section": "Boxplots",
    "text": "Boxplots\n\nSource: imagineazhar"
  },
  {
    "objectID": "typology.html#types-of-bar-charts",
    "href": "typology.html#types-of-bar-charts",
    "title": "Typology of charts",
    "section": "Types of bar charts",
    "text": "Types of bar charts"
  },
  {
    "objectID": "typology.html#time-series-plots",
    "href": "typology.html#time-series-plots",
    "title": "Typology of charts",
    "section": "Time series plots",
    "text": "Time series plots\n\nStandard line graphs\n\n(But ask yourself: would you really believe this “finding”? What was the data-generating process? Are movies and shows really getting better?)\n\n\nEmphasis on relative changes"
  },
  {
    "objectID": "typology.html#area-chart",
    "href": "typology.html#area-chart",
    "title": "Typology of charts",
    "section": "Area chart",
    "text": "Area chart\n\n\nA useful resource is the set of charts shown on this website: https://vega.github.io/vega/examples/"
  },
  {
    "objectID": "datasets.html#included-with-course-materials",
    "href": "datasets.html#included-with-course-materials",
    "title": "Datasets",
    "section": "Included with course materials:",
    "text": "Included with course materials:\n\nNationscape surveys (first 10 waves)\nSpending, debt, and fiscal deficits (IMF Fiscal Monitor, Apr. 2023)\nInflation data (WDI)\nHealth-adjusted life expectancy (HALE, 2019). Global Burden of Disease Study. Institute for Health Metrics and Evaluation (IHME).\nCOVID severity (daily data).\nSurveys about conspiracy thinking and populism (Uscinski et al. 2021 dataverse files, codebooks and question wording)\nHeadlines of AI-related articles (data from Mediacloud)\nArticles about the economy from The Guardian (obtained via the free API).\nA dataset of political science article abstracts for practicing descriptive text analysis (credit: Benjamin Guinaudeau).\n\n\nUtilities\n\nOECD country codes"
  },
  {
    "objectID": "datasets.html#selected-public-datasets-potential-options-for-students-projects",
    "href": "datasets.html#selected-public-datasets-potential-options-for-students-projects",
    "title": "Datasets",
    "section": "Selected public datasets (potential options for students’ projects)",
    "text": "Selected public datasets (potential options for students’ projects)\nlegislatoR: Interface to the Comparative Legislators Database\nParlEE plenary speeches V3 data set: Annotated full-text of 10 million sentence-level plenary speeches of six EU legislative chambers\nSocial & Moral Psychology of COVID-19\nEurobarometer: A harmonized dataset\nEuropean Values Study\nMediaCloud\nuseNews: Document-feature matrices of news articles (2019-20)\nCC-News: 708,241 English language news articles published between Jan 2017 and December 2019.\nCumulative CES Common Content\nCCES2020 - NYU module (includes questions on social media use, political behaviors and personality traits)."
  },
  {
    "objectID": "references.html#useful-resources-include",
    "href": "references.html#useful-resources-include",
    "title": "References",
    "section": "Useful resources include:",
    "text": "Useful resources include:\nGestalt Principles\nGestalt Principles (Part 2)\nData Science for Economists\nhttps://socviz.co/\nhttps://ggplot2-book.org/index.html\nhttps://cssbook.net/content/chapter06.html\nhttps://storymaps.arcgis.com/stories/1e7f582d478a4b99bd0c70fffeac4c8b\nhttps://cup.columbia.edu/book/better-data-visualizations/9780231193115\nhttps://journals.sagepub.com/doi/pdf/10.1177/15291006211057899"
  },
  {
    "objectID": "tidyverse-refresher.html#reading-csv-files-read_csv-vs.-read.csv",
    "href": "tidyverse-refresher.html#reading-csv-files-read_csv-vs.-read.csv",
    "title": "Tidyverse Tips / Refresher",
    "section": "Reading CSV files: read_csv() vs. read.csv()",
    "text": "Reading CSV files: read_csv() vs. read.csv()\n\n# Base R\ndata_base &lt;- read.csv(\"my_data.csv\")\n\n# Tidyverse (readr)\nlibrary(tidyverse)\ndata_tidy &lt;- read_csv(\"my_data.csv\")\n\nWhy prefer read_csv()?\n\nAutomatically parses column types (numeric, date, etc.) and shows a progress bar.\nReturns a tibble, which prints more cleanly (truncated rows/columns).\nFaster for large files.\n\nTip: To write back out, use write_csv(data, \"out.csv\")."
  },
  {
    "objectID": "tidyverse-refresher.html#inspecting-your-data-immediately",
    "href": "tidyverse-refresher.html#inspecting-your-data-immediately",
    "title": "Tidyverse Tips / Refresher",
    "section": "Inspecting Your Data Immediately",
    "text": "Inspecting Your Data Immediately\n\nhead(data_tidy)     # first 6 rows\ntail(data_tidy)     # last 6 rows\nstr(data_tidy)      # structure: types & sample values\nglimpse(data_tidy)  # tidyverse-friendly structure\ndim(data_tidy)      # rows, columns\nnames(data_tidy)    # column names\n\nWhy inspect early?\n\nCheck that columns imported with correct (or at least expected) names and types\nSpot missing values or parsing problems\nGet a sense of dataset size and structure"
  },
  {
    "objectID": "tidyverse-refresher.html#dealing-with-spaces-or-special-characters-in-names",
    "href": "tidyverse-refresher.html#dealing-with-spaces-or-special-characters-in-names",
    "title": "Tidyverse Tips / Refresher",
    "section": "Dealing with Spaces or Special Characters in Names",
    "text": "Dealing with Spaces or Special Characters in Names\nSometimes column names contain spaces or punctuation. You can’t refer to them directly without backticks.\n\n# Suppose “Number of deaths” was imported:\ndata$`Number of deaths`\n\n# Better: rename immediately\ndata &lt;- data %&gt;%\n  rename(NumberOfDeaths = `Number of deaths`)\n\nTip: Use janitor’s clean_names() to automatically convert all names to snake_case:\n\nlibrary(janitor)\ndata &lt;- data %&gt;% clean_names()\n# “Number of Deaths” → number_of_deaths"
  },
  {
    "objectID": "tidyverse-refresher.html#renaming-columns",
    "href": "tidyverse-refresher.html#renaming-columns",
    "title": "Tidyverse Tips / Refresher",
    "section": "Renaming Columns",
    "text": "Renaming Columns\n\ndata &lt;- data %&gt;%\n  rename(\n    deaths_total = `Number of deaths`,\n    country_code = CountryCode\n  )\n\nRename multiple columns in one call using new_name = old_name syntax."
  },
  {
    "objectID": "tidyverse-refresher.html#merging-joining-two-datasets",
    "href": "tidyverse-refresher.html#merging-joining-two-datasets",
    "title": "Tidyverse Tips / Refresher",
    "section": "Merging (Joining) Two Datasets",
    "text": "Merging (Joining) Two Datasets\n\nWhy We Merge\n\nMerge (join) means adding columns by matching rows.\nRequires a common identifier (key) that uniquely matches rows across datasets.\n\n\n\nJoin Functions\n\n# Simple one-key join\nmerged &lt;- main_data %&gt;%\n  left_join(data_to_add, by = \"country_year_id\")\n\n# Two-key join\nmerged &lt;- main_data %&gt;%\n  left_join(data_to_add, by = c(\"country\", \"year\"))\n\n# Other types:\n# inner_join(): only keep rows present in both\n# right_join(): keep all from data_to_add\n\nTip: Before joining, ensure keys have the same type and values:\n\nunique(main_data$country)\nunique(data_to_add$country)\n\nTip: If one dataset uses “DEU” and the other “Germany,” recode or create a lookup table before joining."
  },
  {
    "objectID": "tidyverse-refresher.html#appending-binding-rows",
    "href": "tidyverse-refresher.html#appending-binding-rows",
    "title": "Tidyverse Tips / Refresher",
    "section": "Appending (Binding) Rows",
    "text": "Appending (Binding) Rows\nThis is how we would stack observations:\n\n# Recommended\ntotal &lt;- bind_rows(data_for_germany, \n                   data_for_france)\n\n# Base R equivalent:\ntotal2 &lt;- rbind(data_for_germany, data_for_france)\n\nNote: bind_rows() will fill in missing columns with NA if one data frame has extra columns."
  },
  {
    "objectID": "tidyverse-refresher.html#common-operations",
    "href": "tidyverse-refresher.html#common-operations",
    "title": "Tidyverse Tips / Refresher",
    "section": "Common Operations",
    "text": "Common Operations\n\nChaining with the pipe %&gt;%\n\n\nresult &lt;- data %&gt;%\n     filter(year &gt;= 2000) %&gt;%\n     select(country, year, deaths_total) %&gt;%\n     arrange(desc(deaths_total))\n\n\nUse mutate() to create or transform columns\n\n\ndata &lt;- data %&gt;%\n     mutate(\n       deaths_per_100k = deaths_total / population * 100000,\n       log_deaths = log(deaths_total)\n     )\n\n\nQuick summaries with group_by() + summarise()\n\n\nsummary &lt;- data %&gt;%\n     group_by(country) %&gt;%\n     summarise(\n       total_deaths = sum(deaths_total, na.rm = TRUE),\n       avg_deaths = mean(deaths_total, na.rm = TRUE)\n     )\n\n\nCheck for duplicates (especially before joining or binding)\n\n\ndata %&gt;%\n     add_count(country, year) %&gt;%\n     filter(n &gt; 1)\n\n\nConvert to factors or dates cleanly\n\n\ndata &lt;- data %&gt;%\n     mutate(\n       country = as_factor(country),\n       date = lubridate::ymd(date_string)\n     )\n\n\nUse glimpse() for a prettier, horizontally oriented overview."
  },
  {
    "objectID": "tidyverse-refresher.html#useful-reference",
    "href": "tidyverse-refresher.html#useful-reference",
    "title": "Tidyverse Tips / Refresher",
    "section": "Useful reference",
    "text": "Useful reference\nSee Grant McDermott’s excellent slides"
  },
  {
    "objectID": "class-exercizes.html#tidyverse-basics",
    "href": "class-exercizes.html#tidyverse-basics",
    "title": "In-class exercizes",
    "section": "Tidyverse basics",
    "text": "Tidyverse basics\n\nlibrary(tidyverse)\n\n# Read about the density index\n# - Methodology: https://github.com/theatlantic/citylab-data/blob/master/citylab-congress/methodology.md\n# - https://www.bloomberg.com/news/articles/2018-11-20/citylab-s-congressional-density-index\n# - https://www.bloomberg.com/news/articles/2018-10-05/the-suburbs-are-the-midterm-election-battleground\n\n# Load the data\nCD &lt;- readr::read_csv(\"https://raw.githubusercontent.com/zilinskyjan/citylab-data/master/citylab-congress/citylab_cdi_extended.csv\")\n\n# 1. What does each row mean?\n# 2. How many variables (columns) are contained in the dataset?\n# 3. What variables (columns) are present?\n# 4. Which variables contain missing data?\n\nhead(CD)\n\n# Change variable name \"CD\" to \"District\"\nCD &lt;- rename(CD, `District` = `CD`)\n\n# Move the variables you are interested in the left:\nCD %&gt;% select(District, Clinton16, everything())\n\nCD %&gt;% relocate(District, Clinton16)\n\n# To see the names of all variables:  \nnames(CD)\n\n# For manual inspection, run:\n# View(CD)\n\n# Reordering rows:\nCD %&gt;% arrange(Clinton16) %&gt;% relocate(Clinton16)\n\nCD %&gt;% arrange(-Clinton16) %&gt;% relocate(Clinton16)\n\n# How are the district classified and how many districts of each type do we have in the data?\ntable(CD$Cluster)\n\ncount(CD, Cluster)\n\nsummarize(CD, number_of_districts = n())\n\nsummarize(CD, number_of_rows = n())\n\n# Re-do the above with pipes\n\nCD %&gt;% count(Cluster)\n\n# Calculate the total number of rows\nCD %&gt;% summarise(number_of_districts = n(),\n                 average_clinton_performance = mean(Clinton16))\n\nCD %&gt;% tally()\n\n# Any missing values?\nsum(complete.cases(CD))\n\ndim(CD)\n\n# Where are the missing values?\ncolSums(is.na(CD))\n\n\n# Let's list the KEY VERBS\n# 1. filter: Keep only some rows (depending on their particular values).\n# 2. select: Keep the specified columns (list their names, without quotation marks).\n# 3. mutate: Create new variables.\n# 4. summarise: Collapse multiple rows into a single summary value.\n# 5. arrange: Order rows based on their values.\n\n# Calculate the average Clinton vote share\nCD %&gt;% summarise(avg_HRC_vote_share = mean(Clinton16))\n\n# Where was HRC's vote at its minimum? Would this work?\nCD %&gt;% summarise(min_HRC_vote_share = min(Clinton16))\n\n# Prepare summaries by district type\nCD %&gt;% \n  group_by(Cluster) %&gt;% \n  summarise(avg_HRC_vote_share = mean(Clinton16))\n\n# Sort your data:\nCD %&gt;% group_by(Cluster) %&gt;%\n  summarise(avg_HRC_vote_share = mean(Clinton16)) %&gt;%\n  arrange(avg_HRC_vote_share)\n\n\n# Sort your data from highest to lowest average Clinton vote share\n# and show the total number of districts per row:\nCD %&gt;% group_by(Cluster) %&gt;%\n  summarise(avg_HRC_vote_share = mean(Clinton16),\n            n=n()) %&gt;%\n  arrange(-avg_HRC_vote_share)\n\n##########################\n# GENERATING NEW VARIABLES (as a function of what we already have)\n##########################\n# Create a binary variable conveying the district is \"safe Democratic\"\nCD %&gt;% mutate(Clinton16_over70 = Clinton16 &gt;= .7) %&gt;% \n  relocate(Clinton16_over70,Clinton16) %&gt;%\n  slice_sample(n=10)\n\n# Or make a string variable [not necessarily recommended]\nCD %&gt;% mutate(Clinton16_over70_string = ifelse(Clinton16 &gt;= .7,\"Safe\",\"Not safe\")) %&gt;%\n  relocate(District,Clinton16,Clinton16_over70_string) %&gt;%\n  slice_sample(n=10) \n\n# Save a new dataset\nCD_new &lt;- CD %&gt;% mutate(Clinton16_over70 = Clinton16 &gt;= .7)\n\n# Check 3 randomly selected district from each group:\nCD_new %&gt;% group_by(Clinton16_over70) %&gt;% \n  sample_n(3) %&gt;% \n  select(District,Clinton16_over70,Clinton16)\n\n# How many such (arbitrarily defined) safe districts are there?\nCD_new %&gt;% count(Clinton16_over70)\n\n# What is the typical density in these types of districts?\nCD_new %&gt;% filter(Clinton16_over70==1) %&gt;%\n  count(Cluster) %&gt;%\n  arrange(-n)\n\n\n\n######################################\n# Working with strings\n#####################################\nlibrary(stringr)\n\nCD %&gt;% filter(str_detect(District,\"NC\"))\n\nCD %&gt;% filter(grepl(\"NC\",District))\n\n# Usually a better choice: generate a new variable\nsubstr(CD$District,1,2) \n\nCD$state &lt;- substr(CD$District,1,2) \n\n# But what happened in the ninth district, NC-09?\nCD %&gt;% filter(state==\"NC\") %&gt;% relocate(`2018 winner party`)\n\nCD %&gt;% count(`Pre-2018 party`)\n\n# How many Democrats and Republicans were re-elected?\nCD %&gt;% count(`Pre-2018 party`,`2018 winner party`)\n\n# Calculate proportions\nCD %&gt;% count(`Pre-2018 party`,`2018 winner party`) %&gt;%\n  mutate(prop = n / sum(n))\n\n# What about the missing results for one district? Where is it?\nCD %&gt;% filter(is.na(`2018 winner party`))\n\nCD %&gt;% filter(is.na(`2018 winner party`)) %&gt;% select(`2018 winner party`)\n\n####################\n# THIS IS IMPORTANT\n####################\n\ndim(CD)\n\ncomplete.cases(CD)\n\nsum(complete.cases(CD))\n\nsum(!complete.cases(CD))\n\n# Where are the missing values?\ncolSums(is.na(CD))\n\nCD %&gt;%\n  filter(is.na(`2018 winner party`))\n\n\n# There were ballot-harvesting problems in NC-09, and a new election had to be called\n# ... what happened next, a Republican won\n\n# So, we can update the dataset:\nCD_nonmissing &lt;- CD %&gt;% mutate(`2018 winner party` = ifelse(District == \"NC-09\",\n                                      \"R\",\n                                      `2018 winner party`))\n\n# This has been cleaned\nCD_nonmissing\n\n# You can save the fixed dataset:\nwrite_csv(CD_nonmissing,\"newfile.csv\")"
  },
  {
    "objectID": "class-exercizes.html#running-regressions-and-visualizing-coefficients-and-confidence-intervals",
    "href": "class-exercizes.html#running-regressions-and-visualizing-coefficients-and-confidence-intervals",
    "title": "In-class exercizes",
    "section": "Running regressions and visualizing coefficients and confidence intervals",
    "text": "Running regressions and visualizing coefficients and confidence intervals\n\nPublic opipinion data\n\nlibrary(tidyverse)\nlibrary(labelled)\ninstall.packages(\"pollster\")\nlibrary(pollster)\n\ngithubURL &lt;- \"https://raw.githubusercontent.com/zilinskyjan/DataViz/temp/data_nationscape2019/Nationscape_first10waves.rds\"\ndownload.file(githubURL,\"Nationscape_first10waves.rds\", method=\"curl\")\n\na &lt;- readRDS(\"Nationscape_first10waves.rds\")\n\na %&gt;% group_by(week) %&gt;% tally()\ntopline(a,aoc_Favorable,weight = weight)\n\nreg1 &lt;- lm(aoc_Favorable ~\n    gender_att3_by1SD +\n    age + college_grad +\n    White + Black + Hispanic, data = a)\n\nsummary(reg1) \n\nbroom is an excellent package:\n\nbroom::tidy(reg1) %&gt;%\n ggplot(aes(x = term, y = estimate)) +\n    geom_point() +\n    geom_errorbar(aes(ymin = estimate - 1.96*std.error, ymax = estimate + 1.96*std.error), width = 0.2) +\n    coord_flip() +\n    theme_minimal() +\n    labs(title = \"Regression Coefficients\",\n         x = \"Coefficient\",\n         y = \"Estimate\") +\n geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\")\n\nThe code above gives us a lot of flexibility.\nThat said, it’s possible to also simply run:\n\nmodelsummary::modelplot(reg1)\n\n\n\nVoting data (county-lavel)\n\nlibrary(tidyverse)\nlibrary(haven)\n\nD &lt;- read_dta(\"https://github.com/zilinskyjan/R-stata-tutorials/blob/master/data/PIIE_replication_wp17-7/Election%20Data.dta?raw=true\")\n\nD$dem_2p_vote_share &lt;- D$demvote / (D$demvote + D$repvote)\n\n# What is the correlation between LFP and Dem. vote share?\n\nlm(dem_2p_vote_share ~ lfp, data = D)\n\n# Equivalent to:\n\nD %&gt;%\n  lm(dem_2p_vote_share ~ lfp, data = .)\n\n# Using the 2016 data only\n\nlm(dem_2p_vote_share ~ lfp, data= D %&gt;% filter(year==2016))\n\n# Equivalent to:\n\nlm(dem_2p_vote_share ~ lfp, data = D, subset = (year==2016))"
  },
  {
    "objectID": "class-exercizes.html#using-stat_density_2d-or-geom_hex",
    "href": "class-exercizes.html#using-stat_density_2d-or-geom_hex",
    "title": "In-class exercizes",
    "section": "Using stat_density_2d or geom_hex()",
    "text": "Using stat_density_2d or geom_hex()\n\nlibrary(tidyverse)\n\nexp &lt;- read.csv(\"https://raw.githubusercontent.com/zilinskyjan/datasets/master/public%20opinion/experts/BertsouCaramani-TechnocracySurvey.csv\")\n\nexp$AP4BIN &lt;- ifelse(exp$AP4 &gt;=5,1,0)\n\nexp &lt;- exp %&gt;% mutate(\n  cty_lab = case_when(\n    country==1 ~ \"Germany\",\n    country==2 ~ \"France\",\n    country==3 ~ \"Great Britain\",\n    country==4 ~ \"Greece\",\n    country==5 ~ \"Italy\",\n    country==6 ~ \"Netherlands\",\n    country==7 ~ \"Poland\",\n    country==8 ~ \"Romania\",\n    country==9 ~ \"Sweden\"\n  )\n)\n\nexp %&gt;%\n  group_by(country) %&gt;%\n  summarise(M_AP = mean(antipolitics),\n            M_POP = mean(popscale)) %&gt;%\n  ggplot(aes(x=M_AP,y=M_POP)) +\n  geom_point()\n\nexp %&gt;%\n  group_by(country) %&gt;%\n  mutate(M_AP = mean(antipolitics),\n            M_POP = mean(popscale)) %&gt;%\nggplot(aes(x=antipolitics, y=popscale) ) +\n  labs(x=\"Anti-politics (based on 4 items)\",y=\"Populist attitudes (6 items)\",\n       caption = \"Data: Bertsou, Eri and Daniele Caramani (2017). Citizens’ Technocratic Attitudes.\") +\n  stat_density_2d(aes(fill = ..density..), geom = \"raster\", contour = FALSE) +\n  #scale_fill_continuous(type = \"viridis\") + \n  scale_fill_continuous(low=\"white\",high=\"cyan3\") + \n  facet_wrap(~ as_factor(cty_lab)) +\n  #geom_hline(yintercept = M_POP) +\n  theme_classic()\n  \n\nexp %&gt;%\n  ggplot(aes(x=antipolitics, y=popscale) ) +\n  geom_hex(bins = 10) +\n  scale_fill_continuous(type = \"viridis\") +\n  theme_bw()"
  }
]